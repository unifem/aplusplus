A++/P++ THANKS file

A++/P++ has originally been written by Dan Quinlan.  Many people
further contributed to A++/P++ by reporting problems, suggesting
various improvements or submitting actual code.  Here is a list of
these people.  Help me keep it complete and exempt of errors.

Bill Henshaw           henshaw@llnl.gov
David Brown            dlb@llnl.gov
Brian Miller           bmiller@llnl.gov
Thomas Rutaganira
Jeff Saltzman
Jeff Painter
Nehal
Markus Berndt
Bobby Philip
Kristi Brislawn
Cris Brislawn
Karen Pao

    This version of P++ uses either PVM or MPI for its implementation.
This version of P++ also uses the PADRE Library for data decomposition
and parallel communication scheduling.  If PADRE is used then MPI is
required.
 
   PADRE is part of the DOE 2000 SciTL library developed originally at
Los Alamos (and now at Livermore).  PADRE was designed jointly by the
Overture and POOMA teams and developed by Kei Davis and Dan Quinlan
and internally uses Block PARTI work from Alan Sussmann, Gagan
Agrawal, and Joel Saltz.  The Block PARTI work represents the lower
level of parallel communication in P++ and simplifies the P++ parts
specific to parallel communication.  However the use of Block PARTI
has required some limitations on the generality of the partitioning
present in this version of P++.  PADRE also used the PGSLib and
Global Arrays (from Jarek at PNL), we want to thank them for there
contribution to PADRE which we use within P++.


