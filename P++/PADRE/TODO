These are what we intend to work on in PADRE.
They are listed in descending priority.

Codes in GlobalArrays::InitializeLocalDescriptor ()
and GlobalArrays::InitializeLocalDescriptor ( UserGlobalDomain & inputLocalDescriptor, UserLocalDomain & inputLocalDomain )
don't seem to be required to be called from PADRE.  Maybe they should be P++ functions
called from P++ without having to require the PADRE interface.

GlobalArrays is not functional.  It has merely been put in place.

KELP has not passed all its tests.

We need all the sublibraries to work together.  Their working
together has not been checked.

Benchmarking problems need to be put in.

Find out what the issues are on performance, document and
eventually solve them.

Optimize communication.

The only load balancing algorithm in place is a 1D load balancing
capability written by Dan Quinlan.  We have to expand load
balancing capabilities.  As part of this, we should write the
common interface for the load balancing functions.

Write base classes.  PADRE API is designed to be enforced
through the use of a PADRE base class which has not been
written yet, so the API is not currently strictly enforced.
