# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


#######################################################
#           Used in A++/P++ Configuration
#######################################################

# This is required for some rules (e.g. all-recursive, and all in some directories)


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AMTAR = @AMTAR@
AR = @AR@
AR_EXTRACT = @AR_EXTRACT@
AR_EXTRACT_FLAGS = @AR_EXTRACT_FLAGS@
AR_UPDATE = @AR_UPDATE@
AR_UPDATE_FLAGS = @AR_UPDATE_FLAGS@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_DL_COMPILE_FLAGS = @CXX_DL_COMPILE_FLAGS@
CXX_DL_LINK_FLAGS = @CXX_DL_LINK_FLAGS@
CXX_DYNAMIC_LINKER = @CXX_DYNAMIC_LINKER@
CXX_OPT = @CXX_OPT@
CXX_OPTIONS = @CXX_OPTIONS@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATES = @CXX_TEMPLATES@
CXX_TEMPLATE_OBJECT_FILES = @CXX_TEMPLATE_OBJECT_FILES@
CXX_TEMPLATE_REPOSITORY = @CXX_TEMPLATE_REPOSITORY@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
C_DL_COMPILE_FLAGS = @C_DL_COMPILE_FLAGS@
C_DL_LINK_FLAGS = @C_DL_LINK_FLAGS@
C_DYNAMIC_LINKER = @C_DYNAMIC_LINKER@
C_OPTIONS = @C_OPTIONS@
C_WARNINGS = @C_WARNINGS@
DEPDIR = @DEPDIR@
DOXYGEN_BIN = @DOXYGEN_BIN@
DOXYSEARCH_BIN = @DOXYSEARCH_BIN@
EXEEXT = @EXEEXT@
Fortran_LIBS = @Fortran_LIBS@
GlobalArrays_INCLUDES = @GlobalArrays_INCLUDES@
GlobalArrays_LIBDIRS = @GlobalArrays_LIBDIRS@
GlobalArrays_LIBLINKS = @GlobalArrays_LIBLINKS@
GlobalArrays_LIBS = @GlobalArrays_LIBS@
GlobalArrays_PREFIX = @GlobalArrays_PREFIX@
INCLUDES = @INCLUDES@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IndirectAddressing_SUBDIRS = @IndirectAddressing_SUBDIRS@
Kelp_INCLUDES = @Kelp_INCLUDES@
Kelp_LIBS = @Kelp_LIBS@
LD = @LD@
LIBS = @LIBS@
M4 = @M4@
MDI_C_DEBUG = @MDI_C_DEBUG@
MDI_C_OPT = @MDI_C_OPT@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIF77NEEDSPP = @MPIF77NEEDSPP@
MPIFLAGS = @MPIFLAGS@
MPIINCLUDE = @MPIINCLUDE@
MPILIBDIRS = @MPILIBDIRS@
MPILIBS = @MPILIBS@
MPIRUN_MACHINEFILE = @MPIRUN_MACHINEFILE@
OBJEXT = @OBJEXT@
OPTIONAL_INDIRECT_ADDRESSING_SUBDIRS = @OPTIONAL_INDIRECT_ADDRESSING_SUBDIRS@
OPTIONAL_PADRE_SUBDIRS = @OPTIONAL_PADRE_SUBDIRS@
PACKAGE = @PACKAGE@
PADRE_DIR = @PADRE_DIR@
PADRE_INCLUDES = @PADRE_INCLUDES@
PADRE_LIBS = @PADRE_LIBS@
PARTI_DIR = @PARTI_DIR@
PARTI_INCLUDES = @PARTI_INCLUDES@
PARTI_LIBS = @PARTI_LIBS@
PERL = @PERL@
PGSLIB_DIR = @PGSLIB_DIR@
PGSLIB_INCLUDES = @PGSLIB_INCLUDES@
PGSLIB_LIBS = @PGSLIB_LIBS@
PPP_BUILD_SHARED_LIBS = @PPP_BUILD_SHARED_LIBS@
PPP_BUILD_SHARED_LIB_TARGET = @PPP_BUILD_SHARED_LIB_TARGET@
PTHREADS_LIB = @PTHREADS_LIB@
PURIFY_EXECUTABLE = @PURIFY_EXECUTABLE@
PURIFY_HOME = @PURIFY_HOME@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PURIFY_RUN_AT_EXIT = @PURIFY_RUN_AT_EXIT@
PURIFY_WINDOWS_OPTION = @PURIFY_WINDOWS_OPTION@
PXX_RPATH = @PXX_RPATH@
PXX_SUBLIBS = @PXX_SUBLIBS@
Parti_INCLUDES = @Parti_INCLUDES@
Parti_LIBS = @Parti_LIBS@
RANLIB = @RANLIB@
RUNTIME_LOADER_FLAGS = @RUNTIME_LOADER_FLAGS@
SHARED_LIBS = @SHARED_LIBS@
SHARED_LIB_EXTENSION = @SHARED_LIB_EXTENSION@
STATIC_LINKER = @STATIC_LINKER@
STATIC_LINKER_FLAGS = @STATIC_LINKER_FLAGS@
STL_DIR = @STL_DIR@
STL_INCLUDES = @STL_INCLUDES@
TEST_NPROCS = @TEST_NPROCS@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
lam_INCLUDES = @lam_INCLUDES@
lam_LIBS = @lam_LIBS@
lam_PREFIX = @lam_PREFIX@
mpich_INCLUDES = @mpich_INCLUDES@
mpich_LIBS = @mpich_LIBS@
mpich_PREFIX = @mpich_PREFIX@
mpirun = @mpirun@
sla_INCLUDES = @sla_INCLUDES@
sla_LIBS = @sla_LIBS@
sla_PREFIX = @sla_PREFIX@
C_DEBUG = @MDI_C_DEBUG@

C_OPT = @MDI_C_OPT@

MAKE = gmake

# Extensions to Automake's C and C++ compiler flags.
CXXFLAGS = @CXXFLAGS@ $(CXX_DEBUG) $(CXX_DEFINES) $(CXX_OPTIONS) $(CXX_OPT) $(CXX_TEMPLATES) $(CXX_WARNINGS) $(CXX_DL_COMPILE_FLAGS)
CFLAGS = @CFLAGS@ $(C_DEBUG) $(C_OPTIONS) $(C_OPT) $(C_WARNINGS) $(C_DL_COMPILE_FLAGS)

RM = rm -f

#######################################################
#######################################################
clean_shared_libs_and_templates = rm -f *.so; rm -rf $(CXX_TEMPLATE_REPOSITORY) Templates.DB cxx_repository SunWS_cache PI* ti_files ii_files


# The following file actually only provides the printPpp rule.
# include ../../config/Makefile.config.in
noinst_LIBRARIES = libMDI.a
noinst_HEADERS = array_domain.h constants.h machine.h

double_SRCS = \
     double_MDI_1.c double_MDI_2.c double_MDI_3.c double_MDI_4.c double_MDI_5.c \
     double_MDI_6.c double_MDI_7.c double_MDI_8.c double_MDI_9.c double_MDI_10.c \
     double_MDI_11.c double_MDI_12.c double_MDI_13.c double_MDI_14.c double_MDI_15.c \
     double_MDI_16.c double_MDI_17.c double_MDI_18.c double_MDI_19.c double_MDI_20.c \
     double_MDI_21.c double_MDI_22.c double_MDI_23.c double_MDI_24.c double_MDI_25.c \
     double_MDI_26.c double_MDI_27.c double_MDI_28.c double_MDI_29.c double_MDI_30.c \
     double_MDI_31.c double_MDI_32.c double_MDI_33.c double_MDI_34.c double_MDI_35.c \
     double_MDI_36.c double_MDI_37.c double_MDI_38.c double_MDI_39.c double_MDI_40.c \
     double_MDI_41.c double_MDI_42.c double_MDI_43.c double_MDI_44.c double_MDI_45.c \
     double_MDI_46.c double_MDI_47.c double_MDI_48.c double_MDI_49.c double_MDI_50.c \
     double_MDI_51.c double_MDI_52.c double_MDI_53.c double_MDI_54.c double_MDI_55.c \
     double_MDI_56.c double_MDI_57.c double_MDI_58.c double_MDI_59.c double_MDI_60.c \
     double_MDI_61.c double_MDI_62.c double_MDI_63.c double_MDI_64.c double_MDI_65.c


float_SRCS = \
     float_MDI_1.c float_MDI_2.c float_MDI_3.c float_MDI_4.c float_MDI_5.c \
     float_MDI_6.c float_MDI_7.c float_MDI_8.c float_MDI_9.c float_MDI_10.c \
     float_MDI_11.c float_MDI_12.c float_MDI_13.c float_MDI_14.c float_MDI_15.c \
     float_MDI_16.c float_MDI_17.c float_MDI_18.c float_MDI_19.c float_MDI_20.c \
     float_MDI_21.c float_MDI_22.c float_MDI_23.c float_MDI_24.c float_MDI_25.c \
     float_MDI_26.c float_MDI_27.c float_MDI_28.c float_MDI_29.c float_MDI_30.c \
     float_MDI_31.c float_MDI_32.c float_MDI_33.c float_MDI_34.c float_MDI_35.c \
     float_MDI_36.c float_MDI_37.c float_MDI_38.c float_MDI_39.c float_MDI_40.c \
     float_MDI_41.c float_MDI_42.c float_MDI_43.c float_MDI_44.c float_MDI_45.c \
     float_MDI_46.c float_MDI_47.c float_MDI_48.c float_MDI_49.c float_MDI_50.c \
     float_MDI_51.c float_MDI_52.c float_MDI_53.c float_MDI_54.c float_MDI_55.c \
     float_MDI_56.c float_MDI_57.c float_MDI_58.c float_MDI_59.c float_MDI_60.c \
     float_MDI_61.c float_MDI_62.c float_MDI_63.c float_MDI_64.c float_MDI_65.c


int_SRCS = \
     int_MDI_1.c int_MDI_2.c int_MDI_3.c int_MDI_4.c int_MDI_5.c \
     int_MDI_6.c int_MDI_7.c int_MDI_8.c int_MDI_9.c int_MDI_10.c \
     int_MDI_11.c int_MDI_12.c int_MDI_13.c int_MDI_14.c int_MDI_15.c \
     int_MDI_16.c int_MDI_17.c int_MDI_18.c int_MDI_19.c int_MDI_20.c \
     int_MDI_21.c int_MDI_22.c int_MDI_23.c int_MDI_24.c int_MDI_25.c \
     int_MDI_26.c int_MDI_27.c int_MDI_28.c int_MDI_29.c int_MDI_30.c \
     int_MDI_31.c int_MDI_32.c int_MDI_33.c int_MDI_34.c int_MDI_35.c \
     int_MDI_36.c int_MDI_37.c int_MDI_38.c int_MDI_39.c int_MDI_40.c \
     int_MDI_41.c int_MDI_42.c int_MDI_43.c int_MDI_44.c int_MDI_45.c \
     int_MDI_46.c int_MDI_47.c int_MDI_48.c int_MDI_49.c int_MDI_50.c \
     int_MDI_51.c int_MDI_52.c int_MDI_53.c int_MDI_54.c int_MDI_55.c \
     int_MDI_56.c int_MDI_57.c int_MDI_58.c int_MDI_59.c int_MDI_60.c \
     int_MDI_61.c int_MDI_62.c int_MDI_63.c int_MDI_64.c int_MDI_65.c \
     int_MDI_66.c int_MDI_67.c int_MDI_68.c int_MDI_69.c int_MDI_70.c \
     int_MDI_71.c int_MDI_72.c int_MDI_73.c int_MDI_74.c


libMDI_a_SOURCES = common_func.c $(double_SRCS) $(float_SRCS) $(int_SRCS)

EXTRA_DIST = Makefile.depend
subdir = src/MDI
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libMDI_a_AR = $(AR) cru
libMDI_a_LIBADD =
am_libMDI_a_OBJECTS = common_func.$(OBJEXT) double_MDI_1.$(OBJEXT) \
	double_MDI_2.$(OBJEXT) double_MDI_3.$(OBJEXT) \
	double_MDI_4.$(OBJEXT) double_MDI_5.$(OBJEXT) \
	double_MDI_6.$(OBJEXT) double_MDI_7.$(OBJEXT) \
	double_MDI_8.$(OBJEXT) double_MDI_9.$(OBJEXT) \
	double_MDI_10.$(OBJEXT) double_MDI_11.$(OBJEXT) \
	double_MDI_12.$(OBJEXT) double_MDI_13.$(OBJEXT) \
	double_MDI_14.$(OBJEXT) double_MDI_15.$(OBJEXT) \
	double_MDI_16.$(OBJEXT) double_MDI_17.$(OBJEXT) \
	double_MDI_18.$(OBJEXT) double_MDI_19.$(OBJEXT) \
	double_MDI_20.$(OBJEXT) double_MDI_21.$(OBJEXT) \
	double_MDI_22.$(OBJEXT) double_MDI_23.$(OBJEXT) \
	double_MDI_24.$(OBJEXT) double_MDI_25.$(OBJEXT) \
	double_MDI_26.$(OBJEXT) double_MDI_27.$(OBJEXT) \
	double_MDI_28.$(OBJEXT) double_MDI_29.$(OBJEXT) \
	double_MDI_30.$(OBJEXT) double_MDI_31.$(OBJEXT) \
	double_MDI_32.$(OBJEXT) double_MDI_33.$(OBJEXT) \
	double_MDI_34.$(OBJEXT) double_MDI_35.$(OBJEXT) \
	double_MDI_36.$(OBJEXT) double_MDI_37.$(OBJEXT) \
	double_MDI_38.$(OBJEXT) double_MDI_39.$(OBJEXT) \
	double_MDI_40.$(OBJEXT) double_MDI_41.$(OBJEXT) \
	double_MDI_42.$(OBJEXT) double_MDI_43.$(OBJEXT) \
	double_MDI_44.$(OBJEXT) double_MDI_45.$(OBJEXT) \
	double_MDI_46.$(OBJEXT) double_MDI_47.$(OBJEXT) \
	double_MDI_48.$(OBJEXT) double_MDI_49.$(OBJEXT) \
	double_MDI_50.$(OBJEXT) double_MDI_51.$(OBJEXT) \
	double_MDI_52.$(OBJEXT) double_MDI_53.$(OBJEXT) \
	double_MDI_54.$(OBJEXT) double_MDI_55.$(OBJEXT) \
	double_MDI_56.$(OBJEXT) double_MDI_57.$(OBJEXT) \
	double_MDI_58.$(OBJEXT) double_MDI_59.$(OBJEXT) \
	double_MDI_60.$(OBJEXT) double_MDI_61.$(OBJEXT) \
	double_MDI_62.$(OBJEXT) double_MDI_63.$(OBJEXT) \
	double_MDI_64.$(OBJEXT) double_MDI_65.$(OBJEXT) \
	float_MDI_1.$(OBJEXT) float_MDI_2.$(OBJEXT) \
	float_MDI_3.$(OBJEXT) float_MDI_4.$(OBJEXT) \
	float_MDI_5.$(OBJEXT) float_MDI_6.$(OBJEXT) \
	float_MDI_7.$(OBJEXT) float_MDI_8.$(OBJEXT) \
	float_MDI_9.$(OBJEXT) float_MDI_10.$(OBJEXT) \
	float_MDI_11.$(OBJEXT) float_MDI_12.$(OBJEXT) \
	float_MDI_13.$(OBJEXT) float_MDI_14.$(OBJEXT) \
	float_MDI_15.$(OBJEXT) float_MDI_16.$(OBJEXT) \
	float_MDI_17.$(OBJEXT) float_MDI_18.$(OBJEXT) \
	float_MDI_19.$(OBJEXT) float_MDI_20.$(OBJEXT) \
	float_MDI_21.$(OBJEXT) float_MDI_22.$(OBJEXT) \
	float_MDI_23.$(OBJEXT) float_MDI_24.$(OBJEXT) \
	float_MDI_25.$(OBJEXT) float_MDI_26.$(OBJEXT) \
	float_MDI_27.$(OBJEXT) float_MDI_28.$(OBJEXT) \
	float_MDI_29.$(OBJEXT) float_MDI_30.$(OBJEXT) \
	float_MDI_31.$(OBJEXT) float_MDI_32.$(OBJEXT) \
	float_MDI_33.$(OBJEXT) float_MDI_34.$(OBJEXT) \
	float_MDI_35.$(OBJEXT) float_MDI_36.$(OBJEXT) \
	float_MDI_37.$(OBJEXT) float_MDI_38.$(OBJEXT) \
	float_MDI_39.$(OBJEXT) float_MDI_40.$(OBJEXT) \
	float_MDI_41.$(OBJEXT) float_MDI_42.$(OBJEXT) \
	float_MDI_43.$(OBJEXT) float_MDI_44.$(OBJEXT) \
	float_MDI_45.$(OBJEXT) float_MDI_46.$(OBJEXT) \
	float_MDI_47.$(OBJEXT) float_MDI_48.$(OBJEXT) \
	float_MDI_49.$(OBJEXT) float_MDI_50.$(OBJEXT) \
	float_MDI_51.$(OBJEXT) float_MDI_52.$(OBJEXT) \
	float_MDI_53.$(OBJEXT) float_MDI_54.$(OBJEXT) \
	float_MDI_55.$(OBJEXT) float_MDI_56.$(OBJEXT) \
	float_MDI_57.$(OBJEXT) float_MDI_58.$(OBJEXT) \
	float_MDI_59.$(OBJEXT) float_MDI_60.$(OBJEXT) \
	float_MDI_61.$(OBJEXT) float_MDI_62.$(OBJEXT) \
	float_MDI_63.$(OBJEXT) float_MDI_64.$(OBJEXT) \
	float_MDI_65.$(OBJEXT) int_MDI_1.$(OBJEXT) int_MDI_2.$(OBJEXT) \
	int_MDI_3.$(OBJEXT) int_MDI_4.$(OBJEXT) int_MDI_5.$(OBJEXT) \
	int_MDI_6.$(OBJEXT) int_MDI_7.$(OBJEXT) int_MDI_8.$(OBJEXT) \
	int_MDI_9.$(OBJEXT) int_MDI_10.$(OBJEXT) int_MDI_11.$(OBJEXT) \
	int_MDI_12.$(OBJEXT) int_MDI_13.$(OBJEXT) int_MDI_14.$(OBJEXT) \
	int_MDI_15.$(OBJEXT) int_MDI_16.$(OBJEXT) int_MDI_17.$(OBJEXT) \
	int_MDI_18.$(OBJEXT) int_MDI_19.$(OBJEXT) int_MDI_20.$(OBJEXT) \
	int_MDI_21.$(OBJEXT) int_MDI_22.$(OBJEXT) int_MDI_23.$(OBJEXT) \
	int_MDI_24.$(OBJEXT) int_MDI_25.$(OBJEXT) int_MDI_26.$(OBJEXT) \
	int_MDI_27.$(OBJEXT) int_MDI_28.$(OBJEXT) int_MDI_29.$(OBJEXT) \
	int_MDI_30.$(OBJEXT) int_MDI_31.$(OBJEXT) int_MDI_32.$(OBJEXT) \
	int_MDI_33.$(OBJEXT) int_MDI_34.$(OBJEXT) int_MDI_35.$(OBJEXT) \
	int_MDI_36.$(OBJEXT) int_MDI_37.$(OBJEXT) int_MDI_38.$(OBJEXT) \
	int_MDI_39.$(OBJEXT) int_MDI_40.$(OBJEXT) int_MDI_41.$(OBJEXT) \
	int_MDI_42.$(OBJEXT) int_MDI_43.$(OBJEXT) int_MDI_44.$(OBJEXT) \
	int_MDI_45.$(OBJEXT) int_MDI_46.$(OBJEXT) int_MDI_47.$(OBJEXT) \
	int_MDI_48.$(OBJEXT) int_MDI_49.$(OBJEXT) int_MDI_50.$(OBJEXT) \
	int_MDI_51.$(OBJEXT) int_MDI_52.$(OBJEXT) int_MDI_53.$(OBJEXT) \
	int_MDI_54.$(OBJEXT) int_MDI_55.$(OBJEXT) int_MDI_56.$(OBJEXT) \
	int_MDI_57.$(OBJEXT) int_MDI_58.$(OBJEXT) int_MDI_59.$(OBJEXT) \
	int_MDI_60.$(OBJEXT) int_MDI_61.$(OBJEXT) int_MDI_62.$(OBJEXT) \
	int_MDI_63.$(OBJEXT) int_MDI_64.$(OBJEXT) int_MDI_65.$(OBJEXT) \
	int_MDI_66.$(OBJEXT) int_MDI_67.$(OBJEXT) int_MDI_68.$(OBJEXT) \
	int_MDI_69.$(OBJEXT) int_MDI_70.$(OBJEXT) int_MDI_71.$(OBJEXT) \
	int_MDI_72.$(OBJEXT) int_MDI_73.$(OBJEXT) int_MDI_74.$(OBJEXT)
libMDI_a_OBJECTS = $(am_libMDI_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libMDI_a_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libMDI_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am $(srcdir)/../../../config/Makefile.config.in $(srcdir)/Makefile.depend $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps src/MDI/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libMDI.a: $(libMDI_a_OBJECTS) $(libMDI_a_DEPENDENCIES) 
	-rm -f libMDI.a
	$(libMDI_a_AR) libMDI.a $(libMDI_a_OBJECTS) $(libMDI_a_LIBADD)
	$(RANLIB) libMDI.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `cygpath -w $<`
uninstall-info-am:

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic clean-local \
	clean-noinstLIBRARIES distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-info-am


#############################################################################################
######################   SPECIAL TARGET FOR BUILDING SOURCE CODE   ##########################
#############################################################################################

macros_and_source:
	cd $(srcdir) && $(MAKE) -f makefile.build all_source

source:
	cd $(srcdir) && $(MAKE) -f makefile.build source

templates-clean:
	cd $(srcdir) && $(MAKE) -f makefile.build templates-clean

all-but-MDI-clean:
	cd $(srcdir) && $(MAKE) -f makefile.build all-but-MDI-clean

MDI-source:
	cd $(srcdir) && $(MAKE) -f makefile.build MDI-source

OPERATORS-source:
	cd $(srcdir) && $(MAKE) -f makefile.build OPERATORS-source

all-source:
	cd $(srcdir) && $(MAKE) -f makefile.build all-source

entire-MDI-source:
	cd $(srcdir) && $(MAKE) -f makefile.build entire-MDI-source

entire-OPERATORS-source:
	cd $(srcdir) && $(MAKE) -f makefile.build entire-OPERATORS-source

entire-all-source:
	cd $(srcdir) && $(MAKE) -f makefile.build entire-all-source

MDI-source-clean:
	cd $(srcdir) && $(MAKE) -f makefile.build MDI-source-clean

OPERATORS-source-clean:
	cd $(srcdir) && $(MAKE) -f makefile.build OPERATORS-source-clean

all-source-clean:
	cd $(srcdir) && $(MAKE) -f makefile.build all-source-clean

#############################################################################################
###################   SPECIAL TARGET FOR EVLUATING DISK SPACE USAGE   #######################
#############################################################################################

object_size:
	echo "Size of Object Files = " `wc -c *.o | grep total | cut -d " " -f 2` 

code_size:
	echo "Size of Source Files = " `wc -c *.[c,C] | grep total | cut -d " " -f 2`

# DQ (1/2/2002) I prefer to use the g++ -M option to build
# dependence files since it repects <> vs "" use in includes
depend:
	$(MAKE) -f makefile.build depend

clean-local:
	$(clean_shared_libs_and_templates)

common_func.o: common_func.c constants.h array_domain.h machine.h
double_MDI_1.o: double_MDI_1.c constants.h array_domain.h machine.h
double_MDI_10.o: double_MDI_10.c constants.h array_domain.h machine.h
double_MDI_11.o: double_MDI_11.c constants.h array_domain.h machine.h
double_MDI_12.o: double_MDI_12.c constants.h array_domain.h machine.h
double_MDI_13.o: double_MDI_13.c constants.h array_domain.h machine.h
double_MDI_14.o: double_MDI_14.c constants.h array_domain.h machine.h
double_MDI_15.o: double_MDI_15.c constants.h array_domain.h machine.h
double_MDI_16.o: double_MDI_16.c constants.h array_domain.h machine.h
double_MDI_17.o: double_MDI_17.c constants.h array_domain.h machine.h
double_MDI_18.o: double_MDI_18.c constants.h array_domain.h machine.h
double_MDI_19.o: double_MDI_19.c constants.h array_domain.h machine.h
double_MDI_2.o: double_MDI_2.c constants.h array_domain.h machine.h
double_MDI_20.o: double_MDI_20.c constants.h array_domain.h machine.h
double_MDI_21.o: double_MDI_21.c constants.h array_domain.h machine.h
double_MDI_22.o: double_MDI_22.c constants.h array_domain.h machine.h
double_MDI_23.o: double_MDI_23.c constants.h array_domain.h machine.h
double_MDI_24.o: double_MDI_24.c constants.h array_domain.h machine.h
double_MDI_25.o: double_MDI_25.c constants.h array_domain.h machine.h
double_MDI_26.o: double_MDI_26.c constants.h array_domain.h machine.h
double_MDI_27.o: double_MDI_27.c constants.h array_domain.h machine.h
double_MDI_28.o: double_MDI_28.c constants.h array_domain.h machine.h
double_MDI_29.o: double_MDI_29.c constants.h array_domain.h machine.h
double_MDI_3.o: double_MDI_3.c constants.h array_domain.h machine.h
double_MDI_30.o: double_MDI_30.c constants.h array_domain.h machine.h
double_MDI_31.o: double_MDI_31.c constants.h array_domain.h machine.h
double_MDI_32.o: double_MDI_32.c constants.h array_domain.h machine.h
double_MDI_33.o: double_MDI_33.c constants.h array_domain.h machine.h
double_MDI_34.o: double_MDI_34.c constants.h array_domain.h machine.h
double_MDI_35.o: double_MDI_35.c constants.h array_domain.h machine.h
double_MDI_36.o: double_MDI_36.c constants.h array_domain.h machine.h
double_MDI_37.o: double_MDI_37.c constants.h array_domain.h machine.h
double_MDI_38.o: double_MDI_38.c constants.h array_domain.h machine.h
double_MDI_39.o: double_MDI_39.c constants.h array_domain.h machine.h
double_MDI_4.o: double_MDI_4.c constants.h array_domain.h machine.h
double_MDI_40.o: double_MDI_40.c constants.h array_domain.h machine.h
double_MDI_41.o: double_MDI_41.c constants.h array_domain.h machine.h
double_MDI_42.o: double_MDI_42.c constants.h array_domain.h machine.h
double_MDI_43.o: double_MDI_43.c constants.h array_domain.h machine.h
double_MDI_44.o: double_MDI_44.c constants.h array_domain.h machine.h
double_MDI_45.o: double_MDI_45.c constants.h array_domain.h machine.h
double_MDI_46.o: double_MDI_46.c constants.h array_domain.h machine.h
double_MDI_47.o: double_MDI_47.c constants.h array_domain.h machine.h
double_MDI_48.o: double_MDI_48.c constants.h array_domain.h machine.h
double_MDI_49.o: double_MDI_49.c constants.h array_domain.h machine.h
double_MDI_5.o: double_MDI_5.c constants.h array_domain.h machine.h
double_MDI_50.o: double_MDI_50.c constants.h array_domain.h machine.h
double_MDI_51.o: double_MDI_51.c constants.h array_domain.h machine.h
double_MDI_52.o: double_MDI_52.c constants.h array_domain.h machine.h
double_MDI_53.o: double_MDI_53.c constants.h array_domain.h machine.h
double_MDI_54.o: double_MDI_54.c constants.h array_domain.h machine.h
double_MDI_55.o: double_MDI_55.c constants.h array_domain.h machine.h
double_MDI_56.o: double_MDI_56.c constants.h array_domain.h machine.h
double_MDI_57.o: double_MDI_57.c constants.h array_domain.h machine.h
double_MDI_58.o: double_MDI_58.c constants.h array_domain.h machine.h
double_MDI_59.o: double_MDI_59.c constants.h array_domain.h machine.h
double_MDI_6.o: double_MDI_6.c constants.h array_domain.h machine.h
double_MDI_60.o: double_MDI_60.c constants.h array_domain.h machine.h
double_MDI_61.o: double_MDI_61.c constants.h array_domain.h machine.h
double_MDI_62.o: double_MDI_62.c constants.h array_domain.h machine.h
double_MDI_7.o: double_MDI_7.c constants.h array_domain.h machine.h
double_MDI_8.o: double_MDI_8.c constants.h array_domain.h machine.h
double_MDI_9.o: double_MDI_9.c constants.h array_domain.h machine.h
float_MDI_1.o: float_MDI_1.c constants.h array_domain.h machine.h
float_MDI_10.o: float_MDI_10.c constants.h array_domain.h machine.h
float_MDI_11.o: float_MDI_11.c constants.h array_domain.h machine.h
float_MDI_12.o: float_MDI_12.c constants.h array_domain.h machine.h
float_MDI_13.o: float_MDI_13.c constants.h array_domain.h machine.h
float_MDI_14.o: float_MDI_14.c constants.h array_domain.h machine.h
float_MDI_15.o: float_MDI_15.c constants.h array_domain.h machine.h
float_MDI_16.o: float_MDI_16.c constants.h array_domain.h machine.h
float_MDI_17.o: float_MDI_17.c constants.h array_domain.h machine.h
float_MDI_18.o: float_MDI_18.c constants.h array_domain.h machine.h
float_MDI_19.o: float_MDI_19.c constants.h array_domain.h machine.h
float_MDI_2.o: float_MDI_2.c constants.h array_domain.h machine.h
float_MDI_20.o: float_MDI_20.c constants.h array_domain.h machine.h
float_MDI_21.o: float_MDI_21.c constants.h array_domain.h machine.h
float_MDI_22.o: float_MDI_22.c constants.h array_domain.h machine.h
float_MDI_23.o: float_MDI_23.c constants.h array_domain.h machine.h
float_MDI_24.o: float_MDI_24.c constants.h array_domain.h machine.h
float_MDI_25.o: float_MDI_25.c constants.h array_domain.h machine.h
float_MDI_26.o: float_MDI_26.c constants.h array_domain.h machine.h
float_MDI_27.o: float_MDI_27.c constants.h array_domain.h machine.h
float_MDI_28.o: float_MDI_28.c constants.h array_domain.h machine.h
float_MDI_29.o: float_MDI_29.c constants.h array_domain.h machine.h
float_MDI_3.o: float_MDI_3.c constants.h array_domain.h machine.h
float_MDI_30.o: float_MDI_30.c constants.h array_domain.h machine.h
float_MDI_31.o: float_MDI_31.c constants.h array_domain.h machine.h
float_MDI_32.o: float_MDI_32.c constants.h array_domain.h machine.h
float_MDI_33.o: float_MDI_33.c constants.h array_domain.h machine.h
float_MDI_34.o: float_MDI_34.c constants.h array_domain.h machine.h
float_MDI_35.o: float_MDI_35.c constants.h array_domain.h machine.h
float_MDI_36.o: float_MDI_36.c constants.h array_domain.h machine.h
float_MDI_37.o: float_MDI_37.c constants.h array_domain.h machine.h
float_MDI_38.o: float_MDI_38.c constants.h array_domain.h machine.h
float_MDI_39.o: float_MDI_39.c constants.h array_domain.h machine.h
float_MDI_4.o: float_MDI_4.c constants.h array_domain.h machine.h
float_MDI_40.o: float_MDI_40.c constants.h array_domain.h machine.h
float_MDI_41.o: float_MDI_41.c constants.h array_domain.h machine.h
float_MDI_42.o: float_MDI_42.c constants.h array_domain.h machine.h
float_MDI_43.o: float_MDI_43.c constants.h array_domain.h machine.h
float_MDI_44.o: float_MDI_44.c constants.h array_domain.h machine.h
float_MDI_45.o: float_MDI_45.c constants.h array_domain.h machine.h
float_MDI_46.o: float_MDI_46.c constants.h array_domain.h machine.h
float_MDI_47.o: float_MDI_47.c constants.h array_domain.h machine.h
float_MDI_48.o: float_MDI_48.c constants.h array_domain.h machine.h
float_MDI_49.o: float_MDI_49.c constants.h array_domain.h machine.h
float_MDI_5.o: float_MDI_5.c constants.h array_domain.h machine.h
float_MDI_50.o: float_MDI_50.c constants.h array_domain.h machine.h
float_MDI_51.o: float_MDI_51.c constants.h array_domain.h machine.h
float_MDI_52.o: float_MDI_52.c constants.h array_domain.h machine.h
float_MDI_53.o: float_MDI_53.c constants.h array_domain.h machine.h
float_MDI_54.o: float_MDI_54.c constants.h array_domain.h machine.h
float_MDI_55.o: float_MDI_55.c constants.h array_domain.h machine.h
float_MDI_56.o: float_MDI_56.c constants.h array_domain.h machine.h
float_MDI_57.o: float_MDI_57.c constants.h array_domain.h machine.h
float_MDI_58.o: float_MDI_58.c constants.h array_domain.h machine.h
float_MDI_59.o: float_MDI_59.c constants.h array_domain.h machine.h
float_MDI_6.o: float_MDI_6.c constants.h array_domain.h machine.h
float_MDI_60.o: float_MDI_60.c constants.h array_domain.h machine.h
float_MDI_61.o: float_MDI_61.c constants.h array_domain.h machine.h
float_MDI_62.o: float_MDI_62.c constants.h array_domain.h machine.h
float_MDI_7.o: float_MDI_7.c constants.h array_domain.h machine.h
float_MDI_8.o: float_MDI_8.c constants.h array_domain.h machine.h
float_MDI_9.o: float_MDI_9.c constants.h array_domain.h machine.h
int_MDI_1.o: int_MDI_1.c constants.h array_domain.h machine.h
int_MDI_10.o: int_MDI_10.c constants.h array_domain.h machine.h
int_MDI_11.o: int_MDI_11.c constants.h array_domain.h machine.h
int_MDI_12.o: int_MDI_12.c constants.h array_domain.h machine.h
int_MDI_13.o: int_MDI_13.c constants.h array_domain.h machine.h
int_MDI_14.o: int_MDI_14.c constants.h array_domain.h machine.h
int_MDI_15.o: int_MDI_15.c constants.h array_domain.h machine.h
int_MDI_16.o: int_MDI_16.c constants.h array_domain.h machine.h
int_MDI_17.o: int_MDI_17.c constants.h array_domain.h machine.h
int_MDI_18.o: int_MDI_18.c constants.h array_domain.h machine.h
int_MDI_19.o: int_MDI_19.c constants.h array_domain.h machine.h
int_MDI_2.o: int_MDI_2.c constants.h array_domain.h machine.h
int_MDI_20.o: int_MDI_20.c constants.h array_domain.h machine.h
int_MDI_21.o: int_MDI_21.c constants.h array_domain.h machine.h
int_MDI_22.o: int_MDI_22.c constants.h array_domain.h machine.h
int_MDI_23.o: int_MDI_23.c constants.h array_domain.h machine.h
int_MDI_24.o: int_MDI_24.c constants.h array_domain.h machine.h
int_MDI_25.o: int_MDI_25.c constants.h array_domain.h machine.h
int_MDI_26.o: int_MDI_26.c constants.h array_domain.h machine.h
int_MDI_27.o: int_MDI_27.c constants.h array_domain.h machine.h
int_MDI_28.o: int_MDI_28.c constants.h array_domain.h machine.h
int_MDI_29.o: int_MDI_29.c constants.h array_domain.h machine.h
int_MDI_3.o: int_MDI_3.c constants.h array_domain.h machine.h
int_MDI_30.o: int_MDI_30.c constants.h array_domain.h machine.h
int_MDI_31.o: int_MDI_31.c constants.h array_domain.h machine.h
int_MDI_32.o: int_MDI_32.c constants.h array_domain.h machine.h
int_MDI_33.o: int_MDI_33.c constants.h array_domain.h machine.h
int_MDI_34.o: int_MDI_34.c constants.h array_domain.h machine.h
int_MDI_35.o: int_MDI_35.c constants.h array_domain.h machine.h
int_MDI_36.o: int_MDI_36.c constants.h array_domain.h machine.h
int_MDI_37.o: int_MDI_37.c constants.h array_domain.h machine.h
int_MDI_38.o: int_MDI_38.c constants.h array_domain.h machine.h
int_MDI_39.o: int_MDI_39.c constants.h array_domain.h machine.h
int_MDI_4.o: int_MDI_4.c constants.h array_domain.h machine.h
int_MDI_40.o: int_MDI_40.c constants.h array_domain.h machine.h
int_MDI_41.o: int_MDI_41.c constants.h array_domain.h machine.h
int_MDI_42.o: int_MDI_42.c constants.h array_domain.h machine.h
int_MDI_43.o: int_MDI_43.c constants.h array_domain.h machine.h
int_MDI_44.o: int_MDI_44.c constants.h array_domain.h machine.h
int_MDI_45.o: int_MDI_45.c constants.h array_domain.h machine.h
int_MDI_46.o: int_MDI_46.c constants.h array_domain.h machine.h
int_MDI_47.o: int_MDI_47.c constants.h array_domain.h machine.h
int_MDI_48.o: int_MDI_48.c constants.h array_domain.h machine.h
int_MDI_49.o: int_MDI_49.c constants.h array_domain.h machine.h
int_MDI_5.o: int_MDI_5.c constants.h array_domain.h machine.h
int_MDI_50.o: int_MDI_50.c constants.h array_domain.h machine.h
int_MDI_51.o: int_MDI_51.c constants.h array_domain.h machine.h
int_MDI_52.o: int_MDI_52.c constants.h array_domain.h machine.h
int_MDI_53.o: int_MDI_53.c constants.h array_domain.h machine.h
int_MDI_54.o: int_MDI_54.c constants.h array_domain.h machine.h
int_MDI_55.o: int_MDI_55.c constants.h array_domain.h machine.h
int_MDI_56.o: int_MDI_56.c constants.h array_domain.h machine.h
int_MDI_57.o: int_MDI_57.c constants.h array_domain.h machine.h
int_MDI_58.o: int_MDI_58.c constants.h array_domain.h machine.h
int_MDI_59.o: int_MDI_59.c constants.h array_domain.h machine.h
int_MDI_6.o: int_MDI_6.c constants.h array_domain.h machine.h
int_MDI_60.o: int_MDI_60.c constants.h array_domain.h machine.h
int_MDI_61.o: int_MDI_61.c constants.h array_domain.h machine.h
int_MDI_62.o: int_MDI_62.c constants.h array_domain.h machine.h
int_MDI_7.o: int_MDI_7.c constants.h array_domain.h machine.h
int_MDI_8.o: int_MDI_8.c constants.h array_domain.h machine.h
int_MDI_9.o: int_MDI_9.c constants.h array_domain.h machine.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
