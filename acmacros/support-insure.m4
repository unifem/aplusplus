dnl $Id: support-insure.m4,v 1.20 2002/01/07 20:55:21 gunney Exp $


AC_DEFUN(BTNG_SUPPORT_INSURE,[
# Begin macro BTNG_SUPPORT_INSURE
dnl Support INSURE through the flag --enable-insure-as-compiler.
dnl which modifies the C and C++ compiler names
dnl A Parasoft configuration .psrc file is also written.
dnl
dnl This macro creates a .psrc.in file (base name is arg1) at autoconf
dnl time and the corresponding .psrc file at configure time.  It also
dnl looks for C and C++ codes in the source tree (at autoconf time)
dnl and sets up configure-time commands to link to the top-level .psrc
dnl file at configure time.  Finally, it creates and ac_subst a command
dnl string (btng_insure_psrc_clean) for use in Makefiles to remove the
dnl links.
dnl 
dnl
dnl arg1: the name of the Parasoft configuration file.  Default is ".psrc".
dnl   If you have your own .psrc-type file, specify here a name that will not
dnl   conflict with yours.  If you use the generated .psrc.in file, be sure
dnl   to put in in AC_OUTPUT so its .psrc counterpart is generated by
dnl   configure.
dnl

dnl Whether insure overrides the compiler names.
AC_ARG_ENABLE(insure-as-compiler,
[  --enable-insure-as-compiler[[=COMPILERS]]
			Overide the compiler named in COMPILERS, with
			Parasoft's insure.  The names of the chosen
			compiler are placed in the Parasoft .psrc
			configuration file.  COMPILERS defaults to
			CC,CXX if omitted.],
[case "$enable_insure_as_compiler" in
  yes) enable_insure_as_compiler='CC CXX' ;;	# Override compilers.
  no) enable_insure_as_compiler= ;;		# Override no compiler.
  *)
    # Override specified compilers.
    # We allow specifications to be space- or comma-separated,
    # but remove the commas.
    enable_insure_as_compiler=`echo $enable_insure_as_compiler | sed 's/[[ 	,]]\{1,\}/ /g'`
  ;;
esac]
,
enable_insure_as_compiler=
)

dnl Specify the insure binary.
AC_ARG_WITH(insure,
[  --with-insure=PATH	Specify the name of the Parasoft insure memory
			checking program.],
INSURE_BIN=$with_insure)
if test -z "${INSURE_BIN}" ; then
  AC_PATH_PROG(INSURE_BIN,insure,insure)
fi
AC_SUBST(INSURE_BIN)


BTNG_AC_LOG_VAR(enable_insure_as_compiler INSURE_BIN)


dnl Developers may wish to know what the compilers are before overrriding.
# Define compiler names without insure.
for i in CC CXX; do
  eval "${i}_WITHOUT_INSURE=\$${i};"
done
BTNG_AC_LOG_VAR(CC_WITHOUT_INSURE CXX_WITHOUT_INSURE CC CXX)
AC_SUBST(CC_WITHOUT_INSURE)
AC_SUBST(CXX_WITHOUT_INSURE)


dnl Define macro psrc_filename to be the base name of the
dnl file the user wants to use for the Parasoft configuration
dnl file.  The default name is ".psrc"
define(psrc_filename,ifelse($1,,.psrc,$1))
btng_insure_psrc_filename='psrc_filename'


dnl Create .psrc.in file (at autoconf time, before configure time)
syscmd( file_name='psrc_filename' cat <<__EOM__> ${file_name}.in
# This is ${file_name}.in, a template (.in file) for the
# Parasoft insure configuration file ${file_name}.
# This file is generated by autoconf through the use of
# the BTNG_SUPPORT_INSURE autoconf macro.
#
# It is intended for generating the ${file_name} file at configure time.

# Set the C compiler to the value chosen at configure time.
insure++.compiler_c @CC_WITHOUT_INSURE@

# Set the C++ compiler to the value chosen at configure time.
insure++.compiler_cpp @CXX_WITHOUT_INSURE@

__EOM__
)


if test -n "${enable_insure_as_compiler}"; then
  # User wants to override the compiler names with the insure binary.


  # Define variable INSURE_AUTO_PSRC_DIRS to be
  # the directories where psrc_filename files need to be.
  INSURE_AUTO_PSRC_DIRS='esyscmd(
  for i in `find . -type d -print`; do
  test "`echo $i/*.[[Cc]] $i/*.cc $i/*.cxx $i/*.cpp $i/*.c++`" = \
             "$i/*.[[Cc]] $i/*.cc $i/*.cxx $i/*.cpp $i/*.c++" && continue
  echo $i | sed 's:^./::'
  done | sort)'
  # Remove new-line characters from system command output
  # (necessary for ac_subst-ing the variable).
  INSURE_AUTO_PSRC_DIRS=`echo $INSURE_AUTO_PSRC_DIRS`
  BTNG_AC_LOG_VAR(INSURE_AUTO_PSRC_DIRS)
  AC_SUBST(INSURE_AUTO_PSRC_DIRS)


  # Create a command to clean the psrc_filename file links.
  # This command may be used in the clean rules to remove the links.
  if test -n "$INSURE_AUTO_PSRC_DIRS"; then
    btng_remove_auto_psrc_links='
echo "Removing automatically built links to psrc_filename";
for i in ${INSURE_AUTO_PSRC_DIRS}; do
  rm -f "$$i/psrc_filename";
done
'
    # Remove new-line characters from btng_remove_auto_psrc_links
    # (necessary for ac_subst-ing the variable).
    btng_remove_auto_psrc_links=`echo $btng_remove_auto_psrc_links`
  fi
  AC_SUBST(btng_remove_auto_psrc_links)


  BTNG_AC_LOG_VAR(INSURE_AUTO_PSRC_DIRS btng_remove_auto_psrc_links)


  # Override specific compiler names listed in enable_ensure_as_compiler.
  for i in $enable_insure_as_compiler; do
    BTNG_AC_LOG(Overriding $i compiler with $INSURE_BIN)
    eval "${i}='$INSURE_BIN'"
  done


  AC_OUTPUT_COMMANDS([
  # Generate the links to the top level .psrc file,
  # if the developer generated the .psrc file.
  #
  # Once the compiler names are overridden, the only way the compiling
  # process knows what actual compiler to use is for that compiler
  # to be specified in the .psrc file.  Only one such file is
  # generated at the top level.  Lower level directories that may
  # need them have links pointing to the top level version.
  #
  # Here, we generate those links.
  if test -n "$enable_insure_as_compiler"; then
    # Generate the links only if insure overrided the compiler names.
    if test -f "$btng_insure_psrc_filename"; then
      echo "creating lower-level links to $btng_insure_psrc_filename"
      if test -n "$INSURE_AUTO_PSRC_DIRS"; then
        mkdir -p $INSURE_AUTO_PSRC_DIRS;
        for i in $INSURE_AUTO_PSRC_DIRS; do
          tmp_up_dir=`echo $i | sed 's:[^/]\{1,\}:..:'g`;
          test ! -f $i/$btng_insure_psrc_filename	\
    	&& rm -f $i/$btng_insure_psrc_filename	\
    	&& ln -s $tmp_up_dir/$btng_insure_psrc_filename	\
    	  $i/$btng_insure_psrc_filename;
        done
      fi
    fi
  fi
  ],[
  # Set variables for command to generate links to the top level .psrc file.
  btng_insure_psrc_filename="${btng_insure_psrc_filename}"
  INSURE_AUTO_PSRC_DIRS="${INSURE_AUTO_PSRC_DIRS}"
  # Variable enable_insure_as_compiler is used to determine
  # whether we should create links to the top level .psre file.
  enable_insure_as_compiler="${enable_insure_as_compiler}"
  ])


fi


undefine([psrc_filename])


# End macro BTNG_SUPPORT_INSURE
])



AC_DEFUN(BTNG_SUPPORT_INSURE_PSRC_ADD,[
dnl Append lines to the .psrc file generated.
dnl This gives the configure.in writter a way
dnl to customize the .psrc file generated.
dnl
dnl Arg1: the name of the .psrc file.
dnl Arg2: The lines to add.
AC_REQUIRE([BTNG_SUPPORT_INSURE])
syscmd(
cat <<__EOM__>>$1.in
$2
__EOM__
)
])
