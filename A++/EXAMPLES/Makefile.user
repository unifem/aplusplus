#
# This is a simple makefile that users can use to compile A++
# applications.  Fill in the name of your application,
# the object files it depends upon and any dependencies.
# You may fill in the USER_... variables here or add the
# definitions on the command line, i.e.
#   make -f Makfile.user USER_APPLICATION=test_Ppp_execution USER_APPLICATION_OBJECTS=test_Ppp_execution.o
#
USER_APPLICATION =
USER_APPLICATION_OBJECTS =
USER_APPLICATION_DEPENDENCIES =
USER_LIBS =


# This compiles the application.  This is the default action
# because it appears before all other explicit rules.
compile: $(USER_APPLICATION)


# This runs the user application.
# The generalized-parallel-run script is used to make the command portable.
# All it does is decide on what command should be issued to run the parallel
# program.  For your information, the commands are shown before being
# executed.
# See the script to see the decision is made.  Type generalized-parallel-run
# to get the help message.
run: $(USER_APPLICATION)
	@echo running $(USER_APPLICATION)
	sh ../generalized-serial-run $(USER_APPLICATION)


# This cleans up intermediate files.
clean:
	rm -f $(USERAPPLICATION) $(USER_APPLICATION_OBJECTS)


# Makefile.user.defs defines all the makefile variable to be compatible
# with the way the library was configured.  Feel free to look at it.
# It is meant to be eye-friendly.
include Makefile.user.defs


# This defines the sufficces make cares about.
.SUFFIXES:.o .C

.C.o:
	$(CXXCOMPILE) -c $<

$(USER_APPLICATION): $(USER_APPLICATION_DEPENDENCIES) $(USER_APPLICATION_OBJECTS)
	$(CXXLINK) $(USER_APPLICATION_OBJECTS) $(LIBS) $(USER_LIBS)
