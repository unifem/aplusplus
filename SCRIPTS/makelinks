#! /bin/sh -x

# Make sure we are run in the top level directory.
if test ! -d A++ || test ! -d P++ ; then
  echo "$0 has to be run in the top level A++P++ directory"
  exit 1
fi

# Make sure we have acmacros.
if test ! -d acmacros ; then
  test "$CVSROOT_BTNG" || CVSROOT_BTNG=/usr/casc/overture/gunney/cvsrepository
  echo "No acmacros directory.  Using current version in $CVSROOT_BTNG"
  if test -d CVS ; then
    cvs -d $CVSROOT_BTNG checkout acmacros
  else
    cvs -d $CVSROOT_BTNG export -D "`date`" acmacros
  fi
fi


# Make sure we have Brian Miller's Perfromance Test Suite.
if test ! -d BenchmarkBase ; then
  test "$CVSROOT_PERFORMANCE_TEST_SUITE" || CVSROOT_PERFORMANCE_TEST_SUITE=/usr/casc/overture/bmiller/Repository
  echo "No Performance Test Suite directory.  Using current version in $CVSROOT_PERFORMANCE_TEST_SUITE"
  if test -d CVS ; then
    cvs -d $CVSROOT_PERFORMANCE_TEST_SUITE checkout BenchmarkBase
  else
    cvs -d $CVSROOT_PERFORMANCE_TEST_SUITE export -D "`date`" BenchmarkBase
  fi
fi


# Copy all the acconfig.h files (must be copies (instead of links) to be seen by autoheader!!!)
# ( cd A++/dqDeveloperTests && rm -f acconfig.h && cp ../acconfig.h acconfig.h )
# ( cd P++/dqDeveloperTests && rm -f acconfig.h && cp ../acconfig.h acconfig.h )

# The rest of the files
( cd A++/include && rm -f array_domain.h && ln -s ../src/MDI/array_domain.h array_domain.h )
( cd A++/include && rm -f constants.h && ln -s ../src/MDI/constants.h constants.h )
( cd A++/include && rm -f machine.h && ln -s ../src/MDI/machine.h machine.h )
( cd P++/include && rm -f array_domain.h && ln -s ../src/MDI/array_domain.h array_domain.h )
( cd P++/include && rm -f constants.h && ln -s ../src/MDI/constants.h constants.h )
( cd P++/include && rm -f machine.h && ln -s ../src/MDI/machine.h machine.h )
# ( cd P++/config && rm -f MDI_Filenames.lst && ln -s ../../A++/config/MDI_Filenames.lst MDI_Filenames.lst )
# ( cd P++/config && rm -f cmp.pl && ln -s ../../A++/config/cmp.pl cmp.pl )
# ( cd P++/config && rm -f depend && ln -s ../../A++/config/depend depend )
# ( cd P++/config && rm -f depend.pl && ln -s ../../A++/config/depend.pl depend.pl )
# ( cd P++/src/MDI && rm -f FileNames.lst && ln -s ../../../A++/src/MDI/FileNames.lst FileNames.lst )
( cd P++/src/MDI && rm -f MDI_functions.m4 && ln -s ../../../A++/src/MDI/MDI_functions.m4 MDI_functions.m4 )
( cd P++/src/MDI && rm -f Makefile.depend && ln -s ../../../A++/src/MDI/Makefile.depend Makefile.depend )
( cd P++/src/MDI && rm -f array_domain.h && ln -s ../../../A++/src/MDI/array_domain.h array_domain.h )
( cd P++/src/MDI && rm -f common_func.c && ln -s ../../../A++/src/MDI/common_func.c common_func.c )
( cd P++/src/MDI && rm -f common_macros.m4 && ln -s ../../../A++/src/MDI/common_macros.m4 common_macros.m4 )
( cd P++/src/MDI && rm -f constants.h && ln -s ../../../A++/src/MDI/constants.h constants.h )
( cd P++/src/MDI && rm -f machine.h.m4.c_code && ln -s ../../../A++/src/MDI/machine.h.m4.c_code machine.h.m4.c_code )
( cd P++/src/MDI && rm -f template.m4 && ln -s ../../../A++/src/MDI/template.m4 template.m4 )


# Support for optional use of PARTI instead of PADRE
# rm -rf P++/PARTI && ln -s P++/PADRE/PARTI P++/PARTI
# fileList='helper.c mpi-port.c utils.h Extras.c bsparti.c exchsched.c helper.h mpi-port.h subsched.c List.c bsparti.h fort_wrap.c port.h List.h datamove.c getprocnum.c print.c hash.c print.h temp.c addition_by_quinlan.c decomp.c hash.h utils.c'
# for file in $fileList; do
#     # rm -f P++/PARTI/$file; ln -s P++/PADRE/PARTI/$file P++/PARTI
#     rm -f P++/PARTI/$file; cp P++/PADRE/PARTI/$file P++/PARTI
# done

Num_List='1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62'
for num in $Num_List; do
     rm -f P++/src/MDI/MDI_$num.m4; ln -s ../../../A++/src/MDI/MDI_$num.m4 P++/src/MDI
done

# Files in A++
# Make the files writable before we modify them
# chmod +w A++/include/FileNames.lst A++/src/FileNames.lst \
#         A++/src/MDI/FileNames.lst A++/src/OPERATORS/FileNames.lst \
#         A++/src/array_src/FileNames.lst


# Build the file of names that can be used from the include directory
# rm -f A++/include/FileNames.lst
# cat A++/config/ArraySourceFilenames.lst | sed -e 's%\$(APP_ARRAY_DIR)%\.\.\/src\/array_src%g' -e 's%\$(APP_INCLUDE_DIR)%%g' > A++/include/FileNames.lst

# Build the file of names that can be used from the src directory
# rm -f A++/src/FileNames.lst
# cat A++/config/ArraySourceFilenames.lst A++/config/OPERATORS_Filenames.lst A++/config/MDI_Filenames.lst | sed -e 's%\$(APP_ARRAY_DIR)%array_src%g' -e 's%\$(APP_INCLUDE_DIR)%\.\.\/include%g' -e 's%\$(OPERATORS_DIR)%OPERATORS%g' -e 's%\$(MDI_DIR)%MDI%g' > A++/src/FileNames.lst

# Build the file of names that can be used from the src/array_src directory
# rm -f A++/src/array_src/FileNames.lst
# cat A++/config/ArraySourceFilenames.lst | sed -e 's%\$(APP_ARRAY_DIR)\/%%g' -e 's%\$(APP_INCLUDE_DIR)%\.\.\/\.\.\/include%g' > A++/src/array_src/FileNames.lst

# Build the file of names that can be used from the src/OPERATORS directory
# rm -f A++/src/OPERATORS/FileNames.lst
# cat A++/config/OPERATORS_Filenames.lst | sed -e 's%\$(OPERATOR_DIR)\/%%g' -e 's%\$(APP_INCLUDE_DIR)%\.\.\/\.\.\/include%g' > A++/src/OPERATORS/FileNames.lst

# Build the file of names that can be used from the src/MDI directory
# rm -f A++/src/MDI/FileNames.lst
# cat A++/config/MDI_Filenames.lst | sed 's%\$(MDI_DIR)\/%%g' > A++/src/MDI/FileNames.lst



# Links to the single copy of the old version of STL.
rm -f STL-link &&		ln -s STL-1995 STL-link
rm -f P++/STL-link &&		ln -s ../STL-link P++/STL-link
# rm -f P++/PADRE/STL-link &&	ln -s ../../STL-link P++/PADRE/STL-link
# rm -f P++/PADRE/IndirectAddressing/STL-link &&	ln -s ../../../STL-1995 P++/PADRE/IndirectAddressing/STL-link

# rm -f P++/STL-1995 &&		ln -s ../STL-1995 P++/STL-1995
# rm -f P++/PADRE/STL-1995 &&	ln -s ../../STL-1995 P++/PADRE/STL-1995
# rm -f P++/PADRE/IndirectAddressing/STL-1995 &&	ln -s ../../../STL-1995 P++/PADRE/IndirectAddressing/STL-1995

# Added (5/9/2001) to support Brian Miller's Test Suite
# rm -f A++/PerformanceTests/STL-1995 &&		ln -s ../../STL-1995 A++/PerformanceTests/STL-1995
# rm -f A++/PerformanceTests/STL-link &&		ln -s ../../STL-1995 A++/PerformanceTests/STL-link

# Link to PADRE's resuable automake configurations.
rm -f config/Makefile.override.install.includeHEADERS && \
ln -s ../P++/PADRE/config/Makefile.override.install.includeHEADERS config

# Link to sla.
# We need sla.sh and sla.tcl.  Currently, version 1.9.3 works.
# test ! -d sla-1.9.3 && tar xfz sla-1.9.3.tar.gz
# rm -f SCRIPTS/sla.sh && ln -s ../sla-1.9.3/src/sla.sh SCRIPTS
# rm -f SCRIPTS/sla.tcl && ln -s ../sla-1.9.3/src/sla.tcl SCRIPTS

