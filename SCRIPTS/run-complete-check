#!/bin/sh -f

# This script checks out A++P++ and runs the compilation and
# checking process, generating a nice log file.

# You may want to do a simple redirection of stdout to get a
# log file, i.e. script_name > log_file.
# This scrip redirects stderr to stdout, so do not worry about
# redirecting stderr yourself.


short_name=`basename $0`	# The short name for this script.


# Set default flags for this script before processing script options.
configure_opts='--enable-PXX --enable-SHARED_LIBS --with-mpirun=mpirun'
cvs_tag=''
top_dir='A++P++'
banner='echo'


# Start processing options for this script.
for optstr in "$@"; do
    # echo optstr: \"$optstr\"
    case "$optstr" in
	-h | -help | --help | --hel | --he )
	cat << EOF
Usage: $short_name [options]
  Options:
  -h, --help
	Print this message.
  -s, --show-self
	Shows (cat) this script.
  -n, --no-action
	Do not do anything.  Just list the commands that would be issued.
  -q, --quiet
	Do not output banner information.
  --configure-opts=<string>
	Use <string> as the options for configure.
  --cvs-tag=<cvs tag>
	Use the given <cvs tag> for cvs checkout.
  --top-dir=<directory>
	Check out the distribution into the given directory.
For your logging convenience, this script redirects stderr to stdout.
(Do not try to redirect stderr from this script because there is nothing left.)
EOF
	exit 0 ;;
	--cvs-tag=* )
	    cvs_tag=`echo $optstr | sed 's/[^=]*=//'`
	    # Here are some shorthand for the --cvs-tag flag.
	    if [ "$cvs_tag" = "6d" ]; then
		cvs_tag=BTNG~parti4Dto6D~00~000414~no-change-yet
	    fi
	    cvs_tag="-r $cvs_tag"
	;;
	--top-dir=* )
	    top_dir=`echo $optstr | sed 's/[^=]*=//'`
	    if [ -z "$top_dir" ]; then
		top_dir="A++P++"
	    fi
	;;
	--configure-opts=* )
	    configure_opts=`echo $optstr | sed 's/[^=]*=//'`
	    # Here are some shorthand for the --configure-opts flag.
	    if [ "$configure_opts" = "FastCompile" ]; then
		configure_opts='--enable-PXX --enable-SHARED_LIBS --enable-CXXOPT= --enable-COPT= --with-mpirun=mpirun'
	    elif [ "$configure_opts" = "Debug" ]; then
		configure_opts='--enable-PXX --enable-SHARED_LIBS --enable-INTERNALDEBUG --enable-CXXOPT= --enable-COPT= --enable-CDEBUG=-g --enable-CXXDEBUG=-g --with-mpirun=mpirun'
	    fi
	;;
	-n | --no-action | --no-actio | --no-acti | --no-act | --no-ac | --no-a )
	action=echo
	;;
	-s | --show | --show-self )
	cat $0
	exit
	;;
	-q | --quiet | --quie | --qui | --qu | --q )
	banner=:
	;;
    esac
done
# echo cvs_tag is $cvs_tag
# echo configure_opts is $configure_opts
# Done processing options for this script.


CVSROOT=/usr/casc/overture/A++P++/A++P++CVS/A++P++_Repository


export banner action
grun () {
    $banner
    COM=$1
    BEGTIME=`date +%H:%M:%S`
    $banner "============================================================="
    $banner "STARTING \"$COM\" at $BEGTIME"
    $banner "============================================================="
    if [ -z "$action" ]; then
        eval $COM 2>&1
    else
        $action "$COM" 2>&1
    fi
    if [ $? != 0 ]; then
	echo Error running $COM
	exit 1
    fi
    $banner "============================================================="
    $banner "FINISHED $2: $BEGTIME to `date +%H:%M:%S`"
    $banner "============================================================="
}


$banner "executing:		$0"
$banner "from:			`pwd`"
$banner "on:			`uname -a`"
$banner "at:			`date`"
$banner "by:			\"`whoami`\""
$banner "CVSROOT is:		\"$CVSROOT\""
$banner "A++P++ tag is:		\"$cvs_tag\""
$banner "configure options are:	\"$configure_opts\""
$banner "process id is:		$$"


grun "cvs -d $CVSROOT co $cvs_tag -n -d $top_dir A++P++"	"cvs checkout"
grun "cd A++P++"						"cd A++P++"
grun "SCRIPTS/makelinks"					"makelinks"
grun "make -f makefile.build all_source"			"makefile.build all_source"
grun "./build"							"build"
grun "./configure $configure_opts"				"configure"
grun "make"							"make"
grun "make check"						"make check"

# Added by DQ (9/27/2000)
grun "make install"						"make install"
grun "cd ../../; chgrp -R overture *"				"cd ../../; chgrp -R overture *"

$banner
$banner "============================================================="
$banner "$short_name DONE"
$banner "============================================================="

exit

