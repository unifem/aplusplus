#! /bin/csh

# echo "makelinks build links to files that CVS does not support!"; \
# echo "     run by CVS upon checkout of A++P++ module cvs checkout A++P++"; \
# echo "     specified within A++P++_Repository/CVSROOT/modules"; \
# echo "     line in A++P++_Repository/CVSROOT/modules A++P++ -o A++P++/makelinks A++P++"; \

# Build links (some are required for the makefiles to work properly)
SCRIPTS/makelinks

# Make absolutely all source code

# echo "MAKEFILE.BUILD ALL_SOURCE COMMENTED OUT\!"
make -f makefile.build all_source

# Build links (likely this just rebuilds them)
# cd ..; A++P++/makelinks; cd A++P++

# get out of the scripts directory
# echo "pwd = `pwd`"

# run aclocal, autoconf and automake recursively in each directory by
# calling our script build
# echo "BUILD COMMENTED OUT\!"
build 

# temporary fix: strip out all Template.DB directories
# find . -name Templates.DB -exec rm -rf {} \;

# run configure to build the config.h files in all the source directories
# so that depend files can be generated.
# configure --enable-PXX --enable-SHARED_LIBS

# echo "CONFIGURE COMMENTED OUT\!"
# configure --enable-PXX --enable-SHARED_LIBS --enable-INTERNALDEBUG --enable-CXXOPT= --enable-COPT=
SCRIPTS/AUTOMATED_TESTS/configureSolaris

# Build dependency files for make (these are build into the Makefile.in already
# so updating the Makefile.in would require calls to "build" before running
# configure.  Maybe we should not worry about generating Makefile.depend here
# and include it directly within the CVS respository.
# make -f makefile.build depend

# build
# configure




