#!/bin/sh

# This script checks out A++P++ and builds a distribtution file.
# Then it creates a distribution and launches standard-remote-check-dist-file
# to test the distribution on the standard platforms.

# Written by Brian Gunney.

# Paths needed by this script and possibly others that this script uses.
PATH=/usr/bin:/usr/local/bin:/bin
case `uname -s` in
  SunOS) PATH="/usr/casc/overture/local-sparc64-sun-solaris2.7/bin:/opt/SUNWspro/bin:${PATH}" ;;
  Linux) PATH="/usr/casc/overture/local-i686-redhat-linux/bin:${PATH}" ;;
esac
export PATH

# This script uses LOGNAME and HOSTNAME.
# Sometimes (such as under cron), HOSTNAME is not defined.
# Make sure they are defined.
if test ! "${LOGNAME+set}" = set; then LOGNAME=`whoami`; fi
if test ! "${HOSTNAME+set}" = set; then HOSTNAME=`hostname`; fi
export LOGNAME HOSTNAME

# Make sure PWD is defined correctly.
# It may not be for a cron execution and/or under sh.
PWD=`pwd`; export PWD
echo "Set PWD to '$PWD'."

# Get the name of this script from its full path.
script_name=`basename $0`
dir_name=`dirname $0`

# Create a time stamp string to help identify this particular run.
time_stamp=`date +%Y%m%d_%H%M%S`

# Top directory for this particular process.
# This directory should be uniquely determined by the time stamp,
# host name and process id.
this_cron_run_dir=$time_stamp-$HOSTNAME-$$

# Make a list of people to report failures to.
failure_custodians="$LOGNAME@$HOSTNAME"

cat <<EOF

This is the A++P++ automated check program $0.
It checks out the A++P++ directory, creates a distribution and launches remote
check processes on other machines to check the distribution.
It is run by $LOGNAME@$HOSTNAME with process id $$, placing results in
$PWD/$this_cron_run_dir.
Log files are placed there.

EOF


# Define the die function similar to Perl.
# Mail the user to inform her the script died.
# Argument 1 is the exit value.
# Argument 2 is the error message.
# Make it gaudy.
die () {
    # Email notification of unexpected death of this script.
    cat <<EOF | mutt -F /dev/null -s "cron-check $script_name script for A++P++ died" $failure_custodians
The $script_name run as $LOGNAME@$HOSTNAME script unexpectedly died while $2.

Information:
    user: ${LOGNAME}@${HOSTNAME}
    process: $$
    time stamp: $time_stamp
    finished at: `date`
    results placed in: $PWD/$this_cron_run_dir
    program: $0

Be sure to read mail from the cron run and check your output logs manually.
EOF
    # Report the error and exit.
    echo "ERROR_MESSAGE_FROM $script_name:"
    if [ $?2 ]; then echo "Error $2"; fi
    if [ $?1 ]; then exit $1; fi
    exit 99
}


# Define a function to run gaudily.
# Stderr is redirected to stdout.
banner=echo
action=eval
export banner action
gaudy_run () {
    $banner
    COM=$1
    BEGTIME=`date +%H:%M:%S`
    $banner "======================================================================"
    $banner "STARTING \"$COM\" at $BEGTIME"
    $banner "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    $action "$COM 2>&1"
    if [ $? != 0 ]; then
	die 1 "$2"
    fi
    $banner "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
    $banner "FINISHED $2: $BEGTIME to `date +%H:%M:%S`"
    $banner "======================================================================"
    $banner
}


nohup_redirect_bg () {
    # This function simply provides the syntax for running with nohup,
    # redirection and in the background.  The special shell characters
    # required for redirection and background is not allowed in the
    # synstax of gaudy_run.
    log=$1; shift
    nohup "$@" > $log 2>&1 &
    echo "PID is $! for '$@ > $log 2>&1 &'"
}


# Where the cvs repository resides.
CVSROOT=/usr/casc/overture/A++P++/A++P++CVS/A++P++_Repository
export CVSROOT


# Some additional variables required for this whole twisted process.
# I am trying to get some platform-independence into this script by
# using my personal set-up scripts.  BTNG.
OS=`uname -s`; export OS;	# The following rc files depend on OS.
SITE=casc; export SITE;	# The following rc files depend on SITE.

# Use gm4 if it exists, m4 if not.
M4=gm4
$M4 --version >/dev/null 2>&1 || M4=m4

gaudy_run "cat $0"				"showing this script"
gaudy_run "set"					"showing current environment"

gaudy_run "mkdir -p $this_cron_run_dir"		"creating top directory"
gaudy_run "cd $this_cron_run_dir; PWD=\`pwd\`; pwd; ls -al"	"entering top directory"

if echo "$this_cron_run_dir" | grep "prepared" > /dev/null; then	# Use prepared short cut.
  echo "Skipping export in favor of prepared data."
else
  gaudy_run "cvs -Q -d $CVSROOT export -D today A++P++"	\
						"exporting working directory"
fi

gaudy_run "cd A++P++; PWD=\`pwd\`; pwd; ls -al"	"entering working directory"
gaudy_run "SCRIPTS/makelinks"			"making links"

if echo "$this_cron_run_dir" | grep "prepared" > /dev/null; then	# Use prepared short cut.
  echo "Skipping make all sources in favor of prepared data."
else
  gaudy_run "make -f makefile.build all_source M4=$M4"	"making all sources"
fi

gaudy_run "./build"				"building"
gaudy_run "cd ..; PWD=\`pwd\`; pwd; ls -al"	"backing up to top directory"
gaudy_run "mkdir work"				"making work directory"
gaudy_run "cd work; PWD=\`pwd\`; pwd; ls -al"	"entering work directory"
gaudy_run "../A++P++/configure --enable-maintainer-mode --enable-PXX --disable-mpirun-check "	\
						"configuring"


gaudy_run "make M4=$M4 dist"			"making distribution file"
gaudy_run "cd ..; PWD=\`pwd\`; pwd; ls -al"	"leaving A++P++ directory"
gaudy_run "mv work/A++P++-*.tar.gz ."		"moving distribution file to top directory"



srcdf=A++P++/SCRIPTS/standard-remote-check-dist-file

cat <<EOF

$0 is now finished with generating the distribution file.
The rest of this output will be from running $srcdf
on the distribution file, except for a short comment
and action based on whether $srcdf succeeds.

EOF

$srcdf A++P++-*.tar.gz .
srcdf_status=$?

if [ $srcdf_status -eq 0 ]; then
  gaudy_run "nohup_redirect_bg /dev/null rm -rf A++P++;"	"removing working directory"
  exit 0
else
  echo
  echo "$srcdf exit with non-zero status.  Leaving behind A++P++ directory for diagnosis."
  exit $srcdf_status
fi

