%!PS-Adobe-2.0
%%Title: TeX output 1995.02.01:1452
%%Creator: DVILASER/PS, ArborText, Inc.
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments

%! 
%  Dvips.pro - included prolog for DviLaser-generated PostScript files.
% 
%  Copyright (c) 1986-89, ArborText, Inc.
%  Permission to copy is granted so long as the PostScript code
%  is not resold or used in a commercial product.
%
%  $Header: /usr/casc/overture/A++P++/A++P++CVS/A++P++_Repository/A++P++/doc/Examples.ps,v 1.1.1.1 1999/06/09 02:04:44 dquinlan Exp $

systemdict /setpacking known  % use array packing mode if its available
  {/savepackingmode currentpacking def 
   true setpacking}
  if
 
/$DviLaser 400 dict def
 
% Begin document
/BeginDviLaserDoc {
  vmstatus pop pop 0 eq 
    { $DviLaser begin 
      InitializeState }
    { /DviLaserJob save def
      $DviLaser begin
      InitializeState
      /DviLaserFonts save def }
    ifelse
} bind def
 
% End document
/EndDviLaserDoc {
  vmstatus pop pop 0 eq 
    { end }
    { DviLaserFonts restore
      end
      DviLaserJob restore }
    ifelse
} bind def
 
$DviLaser begin

/tempstr 64 string def
/tempint 0 def
/tempmatrix matrix def
 
%
%  Debugging routines
%
/DebugMode false def

/PrintInt {
  tempstr cvs print
} bind def

/PrintLn {
  (\n) print flush
} bind def
 
/PrintVMStats {
  print
  PrintLn
  (VM status - ) print
  vmstatus
  3 copy
  PrintInt (\(total\), ) print
  PrintInt (\(used\), ) print
  pop
  exch sub 
  PrintInt (\(remaining\), ) print
  PrintInt (\(level\)) print
  PrintLn
} bind def
 
/VMS /PrintVMStats load def 
 
/VMSDebug {
  DebugMode
    {PrintVMStats}
    {pop}
    ifelse
} bind def
 
(beginning of common prolog) VMSDebug 

% Make it easy to bind definitions.
/bdef { bind def } bind def
/xdef { exch def } bdef

% Begin page
/BP {
  /Magnification xdef
  /DviLaserPage save def
  (beginning of page) VMSDebug 
} bdef
 
% End page
/EP {
  DviLaserPage restore
} bdef
 
% Exit page (temporarily) to add fonts/characters.
/XP {
  % Save current point information so it can be reset later. 
  /Xpos where {pop Xpos} {0} ifelse
  /Ypos where {pop Ypos} {0} ifelse
  /currentpoint cvx stopped {0 0 moveto currentpoint} if 
  /DviLaserPage where {pop DviLaserPage restore} if
  moveto
  /Ypos xdef
  /Xpos xdef
} bdef
 
% Resume page
/RP {
  /DviLaserPage save def
} bdef
 
% Purge all fonts to reclaim memory space. 
/PF {
  GlobalMode
  LocalMode
} bdef
 
% Switch to base save/restore level, saving state information. 
/GlobalMode {
  /UserSave where {pop UserSave} if  % invoke "UserSave" if available
  PortraitMode 
  PaperWidth 
  PaperHeight 
  PxlResolution 
  Resolution 
  Magnification
  Ymax
  RasterScaleFactor
  % Save current point information so it can be reset later. 
  /currentpoint cvx stopped {0 0 moveto currentpoint} if 
  /DviLaserPage where {pop DviLaserPage restore} if
  DviLaserFonts restore
  RecoverState
} bdef
 
% Preserve state at the base level.
/RecoverState {
  10 copy
  /Ypos xdef
  /Xpos xdef
  /RasterScaleFactor xdef
  /Ymax xdef
  /Magnification xdef
  /Resolution xdef
  /PxlResolution xdef
  /PaperHeight xdef
  /PaperWidth xdef
  /PortraitMode xdef
  DoInitialScaling
  PortraitMode not {PaperWidth 0 SetupLandscape} if
  Xpos Ypos moveto
} bdef

% Initialize state variables to default values.
/InitializeState {
  /Resolution 3600.0 def
  /PxlResolution 300.0 def
  /RasterScaleFactor PxlResolution Resolution div def
  /PortraitMode true def
  11.0 Resolution mul /PaperHeight xdef
  8.5 Resolution mul /PaperWidth xdef
  /Ymax PaperHeight def
  /Magnification 1000.0 def
  /Xpos 0.0 def
  /Ypos 0.0 def
  /InitialMatrix matrix currentmatrix def
} bdef

% Switch from base save/restore level, restoring state information. 
/LocalMode {
  /Ypos xdef
  /Xpos xdef
  /RasterScaleFactor xdef
  /Ymax xdef
  /Magnification xdef
  /Resolution xdef
  /PxlResolution xdef
  /PaperHeight xdef
  /PaperWidth xdef
  /PortraitMode xdef
  DoInitialScaling
  PortraitMode not {PaperWidth 0 SetupLandscape} if
  Xpos Ypos moveto
  /UserRestore where {pop UserRestore} if  % invoke "UserRestore" if available
  /DviLaserFonts save def
  /DviLaserPage save def
} bdef
 
% Abbreviations 
/S /show load def
/SV /save load def
/RST /restore load def
 
/Yadjust {Ymax exch sub} bdef
 
% (x,y) position absolute, just set Xpos & Ypos, don't move.
/SXY {
  Yadjust 
  /Ypos xdef /Xpos xdef
} bdef
 
% (x,y) position absolute
/XY {
  Yadjust 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (x,0) position absolute
/X {
  currentpoint exch pop 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (0,y) position absolute
/Y {
  currentpoint pop exch Yadjust 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (x,y) position relative
/xy {
  neg rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef
 
% (x,0) position relative
/x {
  0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef
 
% (0,y) position relative
/y {
  0.0 exch neg rmoveto
  currentpoint /Ypos xdef /Xpos xdef
  } bdef
 
% Print a rule.  In order to get correct pixel size and positioning,
% we usually create a temporary font in which the rule is the only character.
% When the rule is large, however, we fill a rectangle instead.
/R {
  /ht xdef
  /wd xdef
  ht 1950 le wd 1950 le and PxlResolution 400 le and
    {save
    /tfd 6 dict def
    tfd begin
      /FontType 3 def
      /FontMatrix [1 0 0 1 0 0] def
      /FontBBox [0 0 wd ht] def
      /Encoding 256 array dup 97 /a put def
      /BuildChar {
        pop   % ignore character code
        pop   % ignore font dict, too
        wd 0 0 0 wd ht setcachedevice
        wd ht true
        [1 0 0 -1 0 ht] {<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>} imagemask
        } def
      end % tfd
    /tf tfd definefont setfont
    (a) show
    restore
    }
    {gsave
    0 setgray
    currentpoint
    newpath
      moveto
      0.0 ht rlineto
      wd 0.0 rlineto
      0.0 ht neg rlineto
      wd neg 0.0 rlineto
    closepath fill
    grestore
    }
  ifelse
  wd 0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef

%
%  <PXL-file resolution(pix/inch)> <resolution(pix/inch)> RES
%
/RES {
  /Resolution xdef
  /PxlResolution xdef
  /RasterScaleFactor PxlResolution Resolution div def
  DoInitialScaling
} bdef

%
% Do initial scaling.
%
/DoInitialScaling {
  InitialMatrix setmatrix
  72.0 Resolution div dup scale   
} bdef
 
%
%  <paper-height(pix)> <paper-width(pix)> PM 
%
/PM { 
  XP
  /PaperWidth xdef 
  /PaperHeight xdef
  /Ymax PaperHeight def
  /PortraitMode true def
  DoInitialScaling
  RP
} bdef  
 
%
%  <paper-height(pix)> <paper-width(pix)> LM 
%
/LM {
  XP
  /PaperWidth xdef 
  /PaperHeight xdef
  /Ymax PaperWidth def
  /PortraitMode false def
  DoInitialScaling
  PaperWidth 0 SetupLandscape
  RP
} bdef  
  
% Change magnification setting
/MAG {
  XP
  /Magnification xdef
  RP
} bdef
 
%
%  Switch to landscape mode
%
/SetupLandscape {
  translate
  90.0 rotate
} bdef
 
%
%  <mode> SPB - begin "\special" mode
%
%  This is the PostScript procedure used to transfer from the internal
%  environment used for the DVI translation code emitted by DVIPS to
%  a standard PostScript environment.
%
%  Parameters: 0 - Local
%              1 - Global
%              2 - Inline
%
/SPB {
  /spc_mode xdef
  spc_mode 0 eq spc_mode 2 eq or
    {XP}
    {spc_mode 1 eq {GlobalMode} if} 
    ifelse
  Resolution 72.0 div dup scale        % Restore default scaling...
  Magnification 1000.0 div dup scale   % Adjust for any magnification...
  /Xpos Xpos 72.0 Resolution div mul 1000.0 Magnification div mul def
  /Ypos Ypos 72.0 Resolution div mul 1000.0 Magnification div mul def
} bdef
 
%
%  <mode> SPE - end "\special" mode
%
%  This is the PostScript procedure used to reenter the internal
%  environment used for the DVI translation code emitted by DVIPS from 
%  the standard PostScript environment provided for processing user-supplied
%  PostScript code.
%
%  Parameters: 0 - Local
%              1 - Global
%              2 - Inline
%
/SPE {
  /spc_mode xdef
  1000.0 Magnification div dup scale   % Un-adjust for any magnification...
  72.0 Resolution div dup scale        % Restore default internal scaling...
  spc_mode 0 eq spc_mode 2 eq or
    {RP}
    {spc_mode 1 eq {LocalMode} if} 
    ifelse
} bdef
 
%
%  <num-copies> PP
%
/PP {
  /#copies xdef
  showpage
  /#copies 1 def
} bdef
 
%
%  /font-name <point-size(pix)> DMF
%
/DMF {
  /psz xdef
  /nam xdef
  nam findfont psz scalefont setfont
} bdef
 
%
%  /abcd (xxx) str-concat  ==> /abcdxxx
%
/str-concatstr 64 string def

/str-concat {
  /xxx xdef
  /nam xdef
  /namstr nam str-concatstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
} bdef
 
%
%  /abcdef 2 str-strip ==> /cdef
%
/str-strip {
  /num xdef
  /nam xdef
  /namstr nam tempstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval
  cvn
} bdef
 
%
%  <old-dict> copydict ==> new-dict on stack
%
/copydict {
  dup length 1 add dict /newdict xdef
    {1 index /FID ne
      {newdict 3 1 roll put}
      {pop pop}
     ifelse
    } forall 
  newdict
} bdef
 
%
%  <font-type> DefineCMEncoding
%
/DefineCMEncoding {
  /EncodeType xdef
 
  /CMEncoding 256 array def
  /Times-Roman findfont /Encoding get aload pop CMEncoding astore pop
 
  EncodeType 11 eq {Do-CM-rm-encoding} if
  EncodeType 12 eq {Do-CM-it-encoding} if
  EncodeType 13 eq {Do-CM-tt-encoding} if
} bdef
 
%
%  Do special mappings for the various CM-font types.  Characters that
%  get "covered up" are repositioned in the range (128,128+32).
%
/Do-standard-CM-encodings {
  CMEncoding
  dup 0 /.notdef put
  dup 1 /.notdef put
  dup 2 /.notdef put
  dup 3 /.notdef put
  dup 4 /.notdef put
  dup 5 /.notdef put
  dup 6 /.notdef put
  dup 7 /.notdef put
 
  dup 8 /.notdef put
  dup 9 /.notdef put
  dup 10 /.notdef put
  dup 11 /.notdef put
  dup 12 /fi put
  dup 13 /fl put
  dup 14 /.notdef put
  dup 15 /.notdef put
 
  dup 16 /dotlessi put
  dup 17 /.notdef put
  dup 18 /grave put
  dup 19 /acute put
  dup 20 /caron put
  dup 21 /breve put
  dup 22 /macron put
  dup 23 /ring put
 
  dup 24 /cedilla put
  dup 25 /germandbls put
  dup 26 /ae put
  dup 27 /oe put
  dup 28 /oslash put
  dup 29 /AE put
  dup 30 /OE put
  dup 31 /Oslash put

  dup 127 /dieresis put

  dup 128 /space put
  dup 129 /quotedbl put
  dup 130 /sterling put
  dup 131 /dollar put
  dup 132 /less put
  dup 133 /greater put
  dup 134 /backslash put
  dup 135 /asciicircum put

  dup 136 /underscore put
  dup 137 /braceleft put
  dup 138 /bar put
  dup 139 /braceright put
  dup 140 /asciitilde put
  pop
} bdef
 
/Do-CM-rm-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 32 /.notdef put
  dup 34 /quotedblright put
  dup 60 /exclamdown put
  dup 62 /questiondown put
  dup 92 /quotedblleft put
  dup 94 /circumflex put
  dup 95 /dotaccent put
  dup 123 /endash put
  dup 124 /emdash put
  dup 125 /hungarumlaut put
  dup 126 /tilde put
  pop
} bdef
 
/Do-CM-it-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 32 /.notdef put
  dup 34 /quotedblright put
  dup 36 /sterling put
  dup 60 /exclamdown put
  dup 62 /questiondown put
  dup 92 /quotedblleft put
  dup 94 /circumflex put
  dup 95 /dotaccent put
  dup 123 /endash put
  dup 124 /emdash put
  dup 125 /hungarumlaut put
  dup 126 /tilde put
  pop
} bdef
 
/Do-CM-tt-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 12 /.notdef put
  dup 13 /quotesingle put
  dup 14 /exclamdown put
  dup 15 /questiondown put
  dup 94 /circumflex put
  dup 126 /tilde put
  pop
} bdef

%
% Routines to handle packing/unpacking numbers.
%
%  <target> <pos> <num> PackHW --> <new target>
%
/PackHW {
  /num xdef
  /pos xdef
  /target xdef
  num 16#0000FFFF and 1 pos sub 16 mul bitshift
    target or
} bdef

%
%  <target> <pos> <num> PackByte --> <new target>
%
/PackByte {
  /num xdef
  /pos xdef
  /target xdef
  num 16#000000FF and 3 pos sub 8 mul bitshift
    target or
} bdef

%
%  <pos> <num> UnpkHW --> <unpacked value>
%
/UnpkHW {
  /num xdef
  /pos xdef
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
} bdef

%
%  <pos> <num> UnpkByte --> <unpacked value>
%
/UnpkByte {
  /num xdef
  /pos xdef
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
} bdef

%
%  <int-font-name> <ext-font-name> <pt-sz(pix)> <type> <loaded-fg> DefineCMFont
%
%    type 10: "as-is" PostScript font
%    type 11: CM-mapped PostScript font - roman
%    type 12: CM-mapped PostScript font - text italic 
%    type 13: CM-mapped PostScript font - typewriter type 
%
/int-dict-name {int (-dict) str-concat} bdef
/int-dict {int (-dict) str-concat cvx load} bdef

/DF {
  true  % signal that the font is already loaded
  DefineCMFont
} bdef
 
/DNF {
  false  % signal that the font is not already loaded
  DefineCMFont
} bdef

/DefineCMFont {
  /loaded xdef
  /typ xdef
  /psz xdef
  /ext xdef
  /int xdef
 
  typ 10 ne 
    { % font_type = 11, 12, 13
    loaded not
      { /fnam ext 3 str-strip def
        fnam findfont copydict /newdict xdef 
        typ DefineCMEncoding
        newdict /Encoding CMEncoding put
        ext newdict definefont pop
      } if
    int-dict-name ext findfont psz scalefont def
    currentdict int [int-dict /setfont cvx] cvx put
    }
    { % font_type = 10
    /fnam ext def
    int-dict-name fnam findfont psz scalefont def
    currentdict int [int-dict /setfont cvx] cvx put
    }
  ifelse
} bdef 
 
%
%  <int-font-name> <ext-font-name> <pt-sz(pix)> <PXL mag> <num-chars>
%      [llx lly urx ury] <newfont-fg> DefinePXLFont
%

/PXLF {
  true  % signal that the font is already loaded
  DefinePXLFont
} bdef
 
/PXLNF {
  false  % signal that the font is not already loaded
  DefinePXLFont
} bdef

/PXLBuildCharDict 17 dict def
 
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup tempstr cvs cvn put} for

/RasterConvert {RasterScaleFactor div} bdef
 
/TransformBBox {
  aload pop
 
  /BB-ury xdef
  /BB-urx xdef
  /BB-lly xdef
  /BB-llx xdef
 
  [BB-llx RasterConvert BB-lly RasterConvert 
   BB-urx RasterConvert BB-ury RasterConvert]
} bdef

/DefinePXLFont {
  /newfont xdef
  /bb xdef
  /num xdef
  /psz xdef
  /dsz xdef
  /pxlmag xdef
  /ext xdef
  /int xdef
 
  /fnam ext (-) str-concat pxlmag tempstr cvs str-concat def
 
  newfont not {
    int-dict-name 13 dict def
   
    int-dict begin
      /FontType 3 def
      /FontMatrix [1 dsz div 0 0 1 dsz div 0 0] def
      /FontBBox bb TransformBBox def
      /Encoding CMEncodingArray def
      /CharDict 1 dict def
      CharDict begin
        /Char-Info num array def
        end
  
      /BuildChar
        { 
          PXLBuildCharDict begin
            /char xdef
            /fontdict xdef
   
            fontdict /CharDict get /Char-Info get char get aload pop
   
            /rasters xdef
            /PackedWord1 xdef
   
            0 PackedWord1 UnpkHW 16#7FFF ne
              { /PackedWord2 xdef
                /wx 0 PackedWord1 UnpkHW def
                /rows 2 PackedWord1 UnpkByte def
                /cols 3 PackedWord1 UnpkByte def
                /llx 0 PackedWord2 UnpkByte def
                /lly 1 PackedWord2 UnpkByte def
                /urx 2 PackedWord2 UnpkByte def
                /ury 3 PackedWord2 UnpkByte def }
              { /PackedWord2 xdef
                /PackedWord3 xdef
                /PackedWord4 xdef
                /wx 1 PackedWord1 UnpkHW def
                /rows 0 PackedWord2 UnpkHW def
                /cols 1 PackedWord2 UnpkHW def
                /llx 0 PackedWord3 UnpkHW def
                /lly 1 PackedWord3 UnpkHW def
                /urx 0 PackedWord4 UnpkHW def
                /ury 1 PackedWord4 UnpkHW def }
               ifelse

            rows 0 lt
              { /rows rows neg def
                /runlength 1 def }
              { /runlength 0 def }
             ifelse
 
            wx 0 
            llx RasterConvert lly RasterConvert 
            urx RasterConvert ury RasterConvert setcachedevice
            rows 0 ne
              {
              gsave
                cols rows true 
                RasterScaleFactor 0 0 RasterScaleFactor neg llx neg ury 
                  tempmatrix astore
                {GenerateRasters} imagemask
              grestore
              } if
            end
        } def
      end
   
      fnam int-dict definefont pop 
    } if 
 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [int-dict /setfont cvx] cvx put
} bdef 
 
%
%  <int-font-name> <code> <wx> <llx> <lly> <urx> <ury> <rows> <cols> <runlength> <rasters> PXLC
%
/PXLC {
 
  /rasters xdef
  /runlength xdef
  /cols xdef
  /rows xdef
  /ury xdef
  /urx xdef
  /lly xdef
  /llx xdef
  /wx xdef
  /code xdef
  /int xdef
 
  % See if the long or short format is required
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
    TackRunLengthToRows
    { int-dict /CharDict get /Char-Info get code 
        [0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
         0 0 wx PackHW 2 rows PackByte 3 cols PackByte
         rasters] put}
    { int-dict /CharDict get /Char-Info get code 
        [0 0 urx PackHW 1 ury PackHW
         0 0 llx PackHW 1 lly PackHW
         0 0 rows PackHW 1 cols PackHW
         0 0 16#7FFF PackHW 1 wx PackHW
         rasters] put} 
    ifelse
} bdef
 
/CKSZ {abs 127 le and} bdef
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if} bdef
 
%
%  <wx> <dsz> <psz> <llx> <lly> <urx> <ury> <rows> <cols> <runlength> <rasters> PLOTC
%
/PLOTC {
  /rasters xdef
  /runlength xdef
  /cols xdef
  /rows xdef
  /ury xdef
  /urx xdef
  /lly xdef
  /llx xdef
  /psz xdef
  /dsz xdef
  /wx xdef
 
  % "Plot" a character's raster pattern.
  rows 0 ne
    {
    gsave
      currentpoint translate
      psz dsz div dup scale
      cols rows true 
      RasterScaleFactor 0 0 RasterScaleFactor neg llx neg ury 
        tempmatrix astore
      {GenerateRasters} imagemask
    grestore
    } if
  wx x
} bdef
 
% Routine to generate rasters for "imagemask".
/GenerateRasters {
  rasters
  runlength 1 eq {RunLengthToRasters} if
} bdef
 
% Routine to convert from runlength encoding back to rasters.
/RunLengthToRasters {
  % ...not done yet...
} bdef
 
%
%  These procedures handle bitmap processing.
%
%  <bitmap columns> <bitmap rows> <bitmap pix/inch> <magnification> BMbeg
%
/BMbeg {
  /BMmagnification xdef
  /BMresolution xdef
  /BMrows xdef
  /BMcols xdef

  /BMcurrentrow 0 def
  gsave
    0.0 setgray
    Resolution BMresolution div dup scale
    currentpoint translate
    BMmagnification 1000.0 div dup scale
    0.0 BMrows moveto
    BMrows dup scale
    currentpoint translate
    /BMCheckpoint save def
  } bdef

/BMend {
  BMCheckpoint restore
  grestore
  } bdef

%
%  <hex raster bitmap> <rows> BMswath 
%
/BMswath {
  /rows xdef
  /rasters xdef

  BMcols rows true
  [BMrows 0 0 BMrows neg 0 BMcurrentrow neg]
  {rasters}
  imagemask

  /BMcurrentrow BMcurrentrow rows add def
  BMcurrentrow % save this on the stack around a restore...
  BMCheckpoint restore
  /BMcurrentrow xdef
  /BMCheckpoint save def
  } bdef

%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

/ROTB {
  XP
  gsave
  Xpos Ypos translate
  rotate % using <theta> from the stack
  Xpos neg Ypos neg translate
  RP
  } bdef

/ROTE {XP grestore RP} bdef

%
%  Procedures for implementing the "epsfile <filename> [<mag>]" special:
%  <llx> <lly> <mag> EPSB -
%  - EPSE -

/EPSB {
  0 SPB
  save
  4 1 roll % push the savelevel below the parameters
  /showpage {} def
  Xpos Ypos translate
  1000 div dup scale % using <mag> from the stack
  neg exch neg exch translate % using <llx> <lly> from the stack
  } bdef

/EPSE {restore 0 SPE} bdef

%
%  Procedure for implementing revision bars:
%  <bary1> <bary2> <barx> <barw> REVB -
%  The bar is a line of width barw drawn from (barx,bary1) to (barx,bary2).

/REVB {
  /barw xdef
  /barx xdef
  /bary2 xdef
  /bary1 xdef
  gsave
    barw setlinewidth
    barx bary1 Yadjust moveto
    barx bary2 Yadjust lineto
    stroke
  grestore
  } bdef

%  
%  A small array and two procedures to facilitate The Publisher's
%  implementation of gray table cells:
%                               <ptnum> GRSP -
%  <ultpnum> <lrptnum> <graylev> <freq> GRFB -
%  
%  GRSP saves the current DVI location so that it can be retrieved later
%  by the index <ptnum>.  GRFB fills a box whose corners are given by the
%  indexes <ultpnum> and <lrptnum> with a halftone gray with the given
%  level and frequency.  The array GRPM holds the coordinates of points
%  marking the corners of gray table cells.

/GRPM 40 dict def

/GRSP {GRPM exch [Xpos Ypos] put} bdef

/GRFB {
  /GRfreq xdef
  /GRgraylev xdef
  GRPM exch get aload pop /GRlry xdef /GRlrx xdef
  GRPM exch get aload pop /GRuly xdef /GRulx xdef
  gsave
    % set the screen frequency if it isn't zero
    GRfreq 0 ne
      {currentscreen
      3 -1 roll pop GRfreq 3 1 roll
      setscreen}
    if
    % set the gray level
    GRgraylev setgray
    % draw and fill the path
    GRulx GRuly moveto
    GRlrx GRuly lineto
    GRlrx GRlry lineto
    GRulx GRlry lineto
    closepath
    fill
  grestore
  } bdef


%
%  Procedures for implementing the "paper <source>" option:
%  <name> <eop> SPS          -
%         <eop> paper-manual -
%  etc.  The boolean <eop> is passed so that a paper source procedure
%  knows if it is being called at the beginning (false) or end
%  (true) of a page.

/SPS {
  /eop xdef
  /name xdef
  name where {pop eop name cvx exec} if
  } bdef

/paper-manual {
    {statusdict /manualfeed known
      {statusdict /manualfeed true put}
    if}
  if
  } bdef

/paper-automatic {
    {statusdict /manualfeed known
      {statusdict /manualfeed false put}
    if}
  if
  } bdef

/paper-top-tray {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 0 setpapertray grestore end}
    if}
  ifelse
  } bdef

/paper-bottom-tray {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 1 setpapertray grestore end}
    if}
  ifelse
  } bdef

/paper-both-trays {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 2 setpapertray grestore end}
    if}
  ifelse
  } bdef

(end of common prolog) VMSDebug 

end
 
systemdict /setpacking known 
  {savepackingmode setpacking}
  if

% 
% End of included prolog section.
%
%!
% All software, documentation, and related files in this distribution of
% psfig/tex are Copyright (c) 1987 Trevor J. Darrell
%
% Permission is granted for use and non-profit distribution of psfig/tex 
% providing that this notice be clearly maintained, but the right to
% distribute any portion of psfig/tex for profit or as part of any commercial
% product is specifically reserved for the author.
%
%
% psfigTeX PostScript Prolog
% $Header: /usr/casc/overture/A++P++/A++P++CVS/A++P++_Repository/A++P++/doc/Examples.ps,v 1.1.1.1 1999/06/09 02:04:44 dquinlan Exp $
%
/TeXscale { 65536 div } def

/startTexFig {
% usage :  x y bb-llx bb-lly bb-urx bb-ury startFig
	/SavedState save def
	userdict maxlength dict begin
	currentpoint transform
	initgraphics
	itransform moveto

	/ury exch TeXscale def
	/urx exch TeXscale def
	/lly exch TeXscale def
	/llx exch TeXscale def
	/y exch TeXscale def
	/x exch TeXscale def
	
	currentpoint /cy exch def /cx exch def

	/sx x urx llx sub div def 	% scaling for x
	/sy y ury lly sub div def	% scaling for y

	sx sy scale			% scale by (sx,sy)

	cx sx div llx sub
	cy sy div ury sub translate
	
	/DefFigCTM matrix currentmatrix def
	/initmatrix {
		DefFigCTM setmatrix
	} def
	/defaultmatrix {
		DefFigCTM exch copy
	} def
	/exval {
		load dup
		dup xcheck exch
		type /arraytype eq and {
			aload pop
		} if
	} def
	/initgraphics [
		/initgraphics exval
		DefFigCTM /setmatrix exval
	] cvx def

	/showpage {
		initgraphics
	} def

} def
% Args are llx lly urx ury (in figure coordinates)
/clipFig {
	currentpoint 6 2 roll
	newpath 4 copy
	4 2 roll moveto
	6 -1 roll exch lineto
	exch lineto
	exch lineto
	closepath clip
	moveto
} def
% doclip, if called, will always be just after a `startfig'
/doclip { llx lly urx ury clipFig } def
/endTexFig {
	end SavedState restore
} def

%%EndProlog
%%BeginSetup
BeginDviLaserDoc
300 300 RES
%%EndSetup


%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 755 0 XY
%%EndPageSetup
XP /F55 /cmbx10 432 59.8 59.8 128 [-4 -15 69 45] PXLNF RP
XP /F55 65 52 2 0 49 41 41 48 0
<000003800000 000007C00000 000007C00000 00000FE00000 00000FE00000
 00000FE00000 00001FF00000 00001FF00000 00003FF80000 00003FF80000
 00003FF80000 000073FC0000 000073FC0000 0000F3FE0000 0000E1FE0000
 0000E1FE0000 0001C0FF0000 0001C0FF0000 0003C0FF8000 0003807F8000
 0007807FC000 0007003FC000 0007003FC000 000E003FE000 000E001FE000
 001E001FF000 001C000FF000 001FFFFFF000 003FFFFFF800 003FFFFFF800
 00780007FC00 00700003FC00 00700003FC00 00E00001FE00 00E00001FE00
 01E00001FF00 01C00000FF00 01C00000FF00 FFFE001FFFFE FFFE001FFFFE
 FFFE001FFFFE>
PXLC RP
755 495 XY F55(A)S
XP /F55 43 53 4 -8 48 38 46 48 0
<000006000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 7FFFFFFFFFE0 FFFFFFFFFFF0 FFFFFFFFFFF0 7FFFFFFFFFE0
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 00000F000000 00000F000000 00000F000000 00000F000000 00000F000000
 000006000000>
PXLC RP
806 495 XY F55(++)S
XP /F55 47 34 4 -15 29 45 60 32 0
<00000300 00000780 00000780 00000F80 00000F00 00000F00 00001F00
 00001E00 00003E00 00003C00 00003C00 00007C00 00007800 00007800
 0000F800 0000F000 0001F000 0001E000 0001E000 0003E000 0003C000
 0003C000 0007C000 00078000 000F8000 000F0000 000F0000 001F0000
 001E0000 003E0000 003C0000 003C0000 007C0000 00780000 00780000
 00F80000 00F00000 01F00000 01E00000 01E00000 03E00000 03C00000
 03C00000 07C00000 07800000 0F800000 0F000000 0F000000 1F000000
 1E000000 1E000000 3E000000 3C000000 7C000000 78000000 78000000
 F8000000 F0000000 F0000000 60000000>
PXLC RP
913 495 XY F55(/)S
XP /F55 80 47 3 0 42 41 41 40 0
<FFFFFFF800 FFFFFFFF00 FFFFFFFFC0 03FC003FE0 03FC000FF0 03FC0007F8
 03FC0007FC 03FC0003FC 03FC0003FE 03FC0003FE 03FC0003FE 03FC0003FE
 03FC0003FE 03FC0003FE 03FC0003FE 03FC0003FC 03FC0007FC 03FC0007F8
 03FC000FF0 03FC003FE0 03FFFFFF80 03FFFFFE00 03FC000000 03FC000000
 03FC000000 03FC000000 03FC000000 03FC000000 03FC000000 03FC000000
 03FC000000 03FC000000 03FC000000 03FC000000 03FC000000 03FC000000
 03FC000000 03FC000000 FFFFF00000 FFFFF00000 FFFFF00000>
PXLC RP
948 495 XY F55(P++)S
XP /F55 123 34 0 16 33 18 2 40 0
<FFFFFFFF80 FFFFFFFF80>
PXLC RP
1125 495 XY F55({)S
XP /F55 71 54 4 0 49 41 41 48 0
<00007FE00300 0003FFFC0F00 001FFFFF1F00 007FF00FFF00 00FF8001FF00
 03FE0000FF00 07FC00007F00 0FF800003F00 0FF000001F00 1FE000001F00
 3FE000000F00 3FC000000F00 7FC000000700 7FC000000700 7FC000000700
 FF8000000000 FF8000000000 FF8000000000 FF8000000000 FF8000000000
 FF8000000000 FF8000000000 FF8000000000 FF8000000000 FF8001FFFFF8
 FF8001FFFFF8 7FC001FFFFF8 7FC00000FF00 7FC00000FF00 3FC00000FF00
 3FE00000FF00 1FE00000FF00 0FF00000FF00 0FF80000FF00 07FC0000FF00
 03FE0001FF00 00FF8001FF00 007FF007FF00 001FFFFFBF00 0003FFFE0F00
 00007FF00300>
PXLC RP
1182 495 XY F55(G)S
XP /F55 101 32 2 0 29 27 27 32 0
<003FE000 01FFF800 03F07E00 0FE03F00 1FC01F80 3F800FC0 3F800FC0
 7F000FC0 7F0007E0 FF0007E0 FF0007E0 FF0007E0 FFFFFFE0 FFFFFFE0
 FF000000 FF000000 FF000000 FF000000 7F000000 7F800000 3F8000E0
 3F8001E0 1FC001C0 0FE003C0 03F81F80 00FFFE00 001FF000>
PXLC RP
1236 495 XY F55(e)S
XP /F55 116 27 1 0 22 38 38 24 0
<007000 007000 007000 007000 00F000 00F000 00F000 01F000 03F000
 03F000 07F000 1FFFF0 FFFFF0 FFFFF0 07F000 07F000 07F000 07F000
 07F000 07F000 07F000 07F000 07F000 07F000 07F000 07F000 07F000
 07F038 07F038 07F038 07F038 07F038 07F038 07F038 03F870 01F8F0
 00FFE0 001F80>
PXLC RP
1267 495 XY F55(tt)S
XP /F55 105 19 3 0 18 43 43 16 0
<0700 1FC0 1FE0 3FE0 3FE0 3FE0 1FE0 1FC0 0700 0000 0000 0000 0000
 0000 0000 0000 FFE0 FFE0 FFE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0
 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0 0FE0
 0FE0 FFFE FFFE FFFE>
PXLC RP
1321 495 XY F55(i)S
XP /F55 110 38 3 0 36 27 27 40 0
<FFC07F0000 FFC1FFC000 FFC787E000 0FCE07F000 0FDC03F800 0FF803F800
 0FF003F800 0FF003F800 0FF003F800 0FE003F800 0FE003F800 0FE003F800
 0FE003F800 0FE003F800 0FE003F800 0FE003F800 0FE003F800 0FE003F800
 0FE003F800 0FE003F800 0FE003F800 0FE003F800 0FE003F800 0FE003F800
 FFFE3FFF80 FFFE3FFF80 FFFE3FFF80>
PXLC RP
1340 495 XY F55(n)S
XP /F55 103 34 2 -13 32 27 40 32 0
<00FF81F0 03FFE7FC 0FC1FE7C 1F80FC7C 3F80FE7C 3F007E10 7F007F00
 7F007F00 7F007F00 7F007F00 7F007F00 7F007F00 3F007E00 3F80FE00
 1F80FC00 0FC1F800 1FFFE000 18FF8000 38000000 3C000000 3C000000
 3E000000 3FFFF800 3FFFFF00 1FFFFFC0 0FFFFFE0 07FFFFF0 1FFFFFF0
 7E0007F8 7C0001F8 F80001F8 F80000F8 F80000F8 F80000F8 FC0001F8
 7E0003F0 3F0007E0 0FC01F80 03FFFE00 007FF000>
PXLC RP
1378 495 XY F55(g)S
XP /F55 83 38 4 0 33 41 41 32 0
<007F8060 03FFF0E0 0FFFFFE0 1F807FE0 3F001FE0 7E0007E0 7E0003E0
 7C0003E0 FC0001E0 FC0001E0 FC0000E0 FE0000E0 FE0000E0 FF000000
 FFC00000 7FFE0000 7FFFE000 3FFFFC00 3FFFFF00 1FFFFF80 07FFFFC0
 03FFFFE0 00FFFFF0 0007FFF0 00007FF0 00000FF8 000007F8 000003F8
 E00003F8 E00001F8 E00001F8 E00001F8 F00001F8 F00001F0 F80003F0
 FC0003E0 FF0007E0 FFE01FC0 FFFFFF00 E0FFFE00 C01FF000>
PXLC RP
1435 495 XY F55(St)S
XP /F55 97 33 2 0 32 27 27 32 0
<01FF8000 07FFF000 0F81FC00 1FC0FE00 1FC07F00 1FC07F00 1FC03F80
 0F803F80 00003F80 00003F80 00003F80 000FFF80 00FFFF80 07FC3F80
 1FE03F80 3F803F80 7F803F80 7F003F80 FE003F80 FE003F80 FE003F80
 FE007F80 FF007F80 7F00FFC0 3F83DFFC 0FFF0FFC 01FC03FC>
PXLC RP
1500 495 XY F55(a)S
XP /F55 114 28 2 0 26 27 27 24 0
<FFC1F0 FFC7FC FFCE3E 0FDC7F 0FD87F 0FF87F 0FF07F 0FF03E 0FF000
 0FE000 0FE000 0FE000 0FE000 0FE000 0FE000 0FE000 0FE000 0FE000
 0FE000 0FE000 0FE000 0FE000 0FE000 0FE000 FFFF00 FFFF00 FFFF00>
PXLC RP
1534 495 XY F55(rte)S
XP /F55 100 38 2 0 35 42 42 40 0
<00003FF800 00003FF800 00003FF800 000003F800 000003F800 000003F800
 000003F800 000003F800 000003F800 000003F800 000003F800 000003F800
 000003F800 000003F800 000003F800 001FE3F800 00FFFBF800 03F03FF800
 0FE00FF800 1FC007F800 3F8003F800 3F8003F800 7F8003F800 7F0003F800
 FF0003F800 FF0003F800 FF0003F800 FF0003F800 FF0003F800 FF0003F800
 FF0003F800 FF0003F800 FF0003F800 7F0003F800 7F0003F800 3F8003F800
 3F8007F800 1FC00FF800 0FE01FF800 03F03FFF80 00FFF3FF80 003FC3FF80>
PXLC RP
1620 495 XY F55(d)S
XP /F13 /cmr8 300 33.2 33.2 128 [-2 -9 34 25] PXLNF RP
XP /F13 49 18 2 0 14 21 21 16 0
<0300 0700 FF00 0700 0700 0700 0700 0700 0700 0700 0700 0700 0700
 0700 0700 0700 0700 0700 0700 0700 7FF0>
PXLC RP
420 563 XY F13(1)S
XP /F13 35 29 2 -6 26 23 29 24 0
<001830 001830 001830 003870 003060 003060 003060 003060 0070E0
 0060C0 FFFFFF FFFFFF 00C180 00C180 01C380 018300 018300 018300
 FFFFFF FFFFFF 030600 070E00 060C00 060C00 060C00 0E1C00 0C1800
 0C1800 0C1800>
PXLC RP
488 563 XY F13(#)S
XP /F13 100 20 1 0 19 23 23 24 0
<007E00 000E00 000E00 000E00 000E00 000E00 000E00 000E00 000E00
 07CE00 1C3E00 300E00 700E00 600E00 E00E00 E00E00 E00E00 E00E00
 600E00 700E00 301E00 182E00 07CFC0>
PXLC RP
517 563 XY F13(d)S
XP /F13 101 16 1 0 14 14 14 16 0
<0FC0 1860 3030 7038 E018 FFF8 E000 E000 E000 6000 7008 3010 1830
 07C0>
PXLC RP
537 563 XY F13(e)S
XP /F13 12 20 0 0 19 23 23 24 0
<00FC00 078200 0E0700 1C0700 1C0200 1C0000 1C0000 1C0000 1C0000
 FFFF00 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 1C0700 1C0700 1C0700 1C0700 FF1FE0>
PXLC RP
552 563 XY F13(\014)S
XP /F13 110 20 0 0 19 14 14 24 0
<FC7C00 1D8E00 1E0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 1C0700 1C0700 1C0700 1C0700 FF9FE0>
PXLC RP
572 563 XY F13(ne)S
XP /F13 66 25 1 0 22 23 23 24 0
<FFFE00 1C0380 1C00E0 1C0060 1C0070 1C0070 1C0070 1C0070 1C00E0
 1C01C0 1FFF80 1FFFC0 1C00E0 1C0070 1C0030 1C0038 1C0038 1C0038
 1C0038 1C0070 1C00E0 1C01C0 FFFF00>
PXLC RP
619 563 XY F13(B)S
XP /F13 79 27 2 0 24 23 23 24 0
<00FC00 030300 0E01C0 1C00E0 380070 300030 700038 600018 E0001C
 E0001C E0001C E0001C E0001C E0001C E0001C 700038 700038 300030
 380070 1C00E0 0E01C0 030300 00FC00>
PXLC RP
644 563 XY F13(O)S
XP /F13 85 26 1 0 24 23 23 24 0
<FF80FE 1C0038 1C0010 1C0010 1C0010 1C0010 1C0010 1C0010 1C0010
 1C0010 1C0010 1C0010 1C0010 1C0010 1C0010 1C0010 1C0010 1C0010
 0E0020 060020 030040 018180 007E00>
PXLC RP
671 563 XY F13(U)S
XP /F13 78 26 1 0 24 23 23 24 0
<FC00FE 1E0038 1F0010 170010 138010 11C010 11C010 10E010 107010
 103810 103810 101C10 100E10 100F10 100710 100390 1001D0 1001D0
 1000F0 100070 100030 380030 FE0010>
PXLC RP
698 563 XY F13(N)S
XP /F13 68 27 1 0 24 23 23 24 0
<FFFF00 1C01C0 1C00E0 1C0030 1C0038 1C0018 1C001C 1C000C 1C000E
 1C000E 1C000E 1C000E 1C000E 1C000E 1C000E 1C000C 1C001C 1C001C
 1C0038 1C0030 1C0060 1C01C0 FFFF00>
PXLC RP
724 563 XY F13(D)S
XP /F13 83 20 2 0 17 23 23 16 0
<0FC4 302C 601C 400C C004 C004 C004 E000 7000 7F00 3FE0 0FF8 01FC
 001C 000E 0006 8006 8006 8006 C004 E008 D810 87E0>
PXLC RP
751 563 XY F13(S)S 773 563 XY 11 2 R
XP /F13 67 25 2 0 22 23 23 24 0
<00FC10 038330 0E00B0 1C0070 380030 300030 700010 600010 E00010
 E00000 E00000 E00000 E00000 E00000 E00010 600010 700010 300020
 380020 1C0040 0E0080 038300 00FC00>
PXLC RP
783 563 XY F13(C)S
XP /F13 72 26 1 0 24 23 23 24 0
<FF83FE 1C0070 1C0070 1C0070 1C0070 1C0070 1C0070 1C0070 1C0070
 1C0070 1C0070 1FFFF0 1C0070 1C0070 1C0070 1C0070 1C0070 1C0070
 1C0070 1C0070 1C0070 1C0070 FF83FE>
PXLC RP
809 563 XY F13(H)S
XP /F13 69 24 1 0 22 23 23 24 0
<FFFFE0 1C00E0 1C0060 1C0020 1C0010 1C0010 1C0010 1C0400 1C0400
 1C0400 1C0C00 1FFC00 1C0C00 1C0400 1C0408 1C0408 1C0008 1C0018
 1C0010 1C0010 1C0030 1C00F0 FFFFF0>
PXLC RP
835 563 XY F13(EC)S
XP /F13 75 27 1 0 25 23 23 24 0
<FF80FE 1C0078 1C0060 1C0040 1C0080 1C0100 1C0600 1C0800 1C1000
 1C3800 1C7800 1C9C00 1D0E00 1E0E00 1C0700 1C0380 1C01C0 1C01C0
 1C00E0 1C0070 1C0078 1C007C FF80FF>
PXLC RP
885 563 XY F13(K)S
XP /F13 50 18 2 0 15 21 21 16 0
<0F80 30E0 4070 8030 C038 E038 4038 0038 0070 0070 0060 00C0 0180
 0300 0600 0C08 0808 1018 3FF0 7FF0 FFF0>
PXLC RP
420 642 XY F13(2)S 50 x(#)S
XP /F13 105 10 0 0 8 23 23 8 0
<18 3C 3C 18 00 00 00 00 00 7C 1C 1C 1C 1C 1C 1C 1C 1C 1C 1C 1C 1C FF>
PXLC RP
517 642 XY F13(in)S
XP /F13 99 16 1 0 14 14 14 16 0
<07F0 1838 3038 7010 6000 E000 E000 E000 E000 6000 7008 3008 1830
 07C0>
PXLC RP
546 642 XY F13(c)S
XP /F13 108 10 0 0 9 23 23 16 0
<FC00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00
 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 FF80>
PXLC RP
562 642 XY F13(l)S
XP /F13 117 20 0 0 19 14 14 24 0
<FC3F00 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 1C0700 1C0700 1C0F00 0E1700 03E7E0>
PXLC RP
572 642 XY F13(ude)S
XP /F13 34 18 1 13 12 23 10 16 0
<60C0 F1E0 F1E0 70E0 1020 1020 2040 2040 4080 4080>
PXLC RP
639 642 XY F13(")S
XP /F13 65 26 1 0 24 23 23 24 0
<001000 003800 003800 003800 005C00 005C00 005C00 008E00 008E00
 008E00 010700 010700 030780 020380 020380 07FFC0 0401C0 0401C0
 0800E0 0800E0 1800E0 3800F0 FE03FE>
PXLC RP
656 642 XY F13(A)S
XP /F13 43 27 2 -4 24 20 24 24 0
<003000 003000 003000 003000 003000 003000 003000 003000 003000
 003000 003000 FFFFFC FFFFFC 003000 003000 003000 003000 003000
 003000 003000 003000 003000 003000 003000>
PXLC RP
683 642 XY F13(++)S
XP /F13 46 10 3 0 7 4 4 8 0
<60 F0 F0 60>
PXLC RP
738 642 XY F13(.)S
XP /F13 104 20 0 0 19 23 23 24 0
<FC0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000
 1C7C00 1D8E00 1E0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 1C0700 1C0700 1C0700 1C0700 FF9FE0>
PXLC RP
747 642 XY F13(h")S
XP /F13 118 19 1 0 17 14 14 16 0
<FE1F 3C0E 3C0C 1C08 1C08 0E10 0E10 0720 0720 03C0 03C0 03C0 0180
 0180>
PXLC RP
488 720 XY F13(v)S
XP /F13 111 18 1 0 16 14 14 16 0
<07C0 1830 3018 600C 600C E00E E00E E00E E00E E00E 701C 3018 1830
 07C0>
PXLC RP
505 720 XY F13(oid)S
XP /F13 109 29 0 0 29 14 14 32 0
<FC7C1F00 1D8E6380 1E0781C0 1C0701C0 1C0701C0 1C0701C0 1C0701C0
 1C0701C0 1C0701C0 1C0701C0 1C0701C0 1C0701C0 1C0701C0 FF9FE7F8>
PXLC RP
564 720 XY F13(m)S
XP /F13 97 18 1 0 17 14 14 16 0
<1FC0 3860 3830 1038 0038 03F8 1E38 3038 7038 E039 E039 E079 70FF
 1F1E>
PXLC RP
593 720 XY F13(ain)S
XP /F13 40 14 3 -9 11 25 34 8 0
<01 02 04 0C 18 18 30 30 70 60 60 60 E0 E0 E0 E0 E0 E0 E0 E0 E0 E0 60
 60 60 70 30 30 18 18 0C 04 02 01>
PXLC RP
652 720 XY F13(\()S
XP /F13 41 14 2 -9 10 25 34 8 0
<80 40 20 30 18 18 0C 0C 0E 06 06 06 07 07 07 07 07 07 07 07 07 07 06
 06 06 0E 0C 0C 18 18 30 20 40 80>
PXLC RP
666 720 XY F13(\))S
XP /F15 /cmsy8 300 33.2 33.2 128 [-1 -32 38 26] PXLNF RP
XP /F15 102 18 2 -8 15 25 33 16 0
<0078 00C0 0180 0300 0300 0300 0300 0300 0300 0300 0300 0300 0300
 0300 0600 0C00 F000 0C00 0600 0300 0300 0300 0300 0300 0300 0300
 0300 0300 0300 0300 0180 00C0 0078>
PXLC RP
488 760 XY F15(f)S
XP /F13 51 18 1 0 16 21 21 16 0
<0FE0 3030 6018 701C 701C 001C 0018 0038 0060 07E0 0030 0018 000C
 000E 000E E00E E00E C00C 4018 3030 0FE0>
PXLC RP
420 799 XY F13(3)S 537 X(in)S
XP /F13 116 14 1 0 11 20 20 16 0
<0800 0800 0800 1800 1800 3800 FF80 3800 3800 3800 3800 3800 3800
 3800 3840 3840 3840 3840 1C80 0F00>
PXLC RP
565 799 XY F13(t)S 12 x(A)S
XP /F13 114 14 0 0 13 14 14 16 0
<FCF0 1D38 1E38 1C10 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00
 FF80>
PXLC RP
617 799 XY F13(rra)S
XP /F13 121 19 1 -6 17 14 20 16 0
<FE1F 3C0E 3C0C 1C08 1C08 0E10 0E10 0720 0720 03C0 03C0 03C0 0180
 0180 0100 0100 E200 E200 A400 7800>
PXLC RP
661 799 XY F13(y)S 682 799 XY 11 2 R -1 x(Si)S
XP /F13 122 16 1 0 14 14 14 16 0
<FFF0 C0E0 80E0 81C0 8380 8780 0700 0E00 1E08 1C08 3818 7010 7030
 FFF0>
PXLC RP
722 799 XY F13(ze)S
XP /F13 61 27 2 3 24 13 10 24 0
<FFFFFC FFFFFC 000000 000000 000000 000000 000000 000000 FFFFFC
 FFFFFC>
PXLC RP
765 799 XY F13(=)S 12 x(1)S
XP /F13 48 18 1 0 16 21 21 16 0
<07C0 1830 3018 701C 600C 600C E00E E00E E00E E00E E00E E00E E00E
 E00E E00E 600C 600C 701C 3018 1C70 07C0>
PXLC RP
822 799 XY F13(00)S
XP /F13 59 10 3 -6 7 14 20 8 0
<60 F0 F0 60 00 00 00 00 00 00 60 F0 F0 70 10 10 20 20 40 40>
PXLC RP
857 799 XY F13(;)S
XP /F13 47 18 2 -8 15 25 33 16 0
<0018 0018 0038 0030 0030 0070 0060 0060 00E0 00C0 01C0 0180 0180
 0380 0300 0300 0700 0600 0600 0E00 0C00 0C00 1C00 1800 3800 3000
 3000 7000 6000 6000 E000 C000 C000>
PXLC RP
488 878 XY F13(//)S
XP /F13 73 13 1 0 12 23 23 16 0
<FFE0 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00
 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 FFE0>
PXLC RP
535 878 XY F13(Inde)S
XP /F13 120 19 1 0 17 14 14 16 0
<FE3F 3C18 1C10 0E20 0740 07C0 0380 01C0 02E0 04F0 0870 1838 383C
 FC7F>
PXLC RP
602 878 XY F13(x)S 12 x(Con)S
XP /F13 115 14 1 0 12 14 14 16 0
<1F40 60C0 C040 C040 E000 FF00 7F80 1FC0 01E0 8060 8060 C060 E0C0
 9F00>
PXLC RP
695 878 XY F13(structor)S 10 x(exam)S
XP /F13 112 20 0 -6 18 14 20 24 0
<FCF800 1F0E00 1C0300 1C0380 1C0180 1C01C0 1C01C0 1C01C0 1C01C0
 1C0180 1C0380 1C0700 1F0E00 1CF800 1C0000 1C0000 1C0000 1C0000
 1C0000 FF8000>
PXLC RP
910 878 XY F13(ples)S
XP /F13 52 18 1 0 16 21 21 16 0
<0030 0030 0070 00F0 01F0 0170 0270 0470 0870 1870 1070 2070 4070
 C070 FFFE 0070 0070 0070 0070 0070 03FE>
PXLC RP
420 918 XY F13(4)S 537 X(Index)S 10 x(I)S 11 x(\()S 12 x(1)S
XP /F13 44 10 3 -6 7 4 10 8 0
<60 F0 F0 70 10 10 20 20 40 40>
PXLC RP
714 918 XY F13(,)S 12 x(Arra)S -1 x(y)S 827 918 XY 11 2 R -1 x(Size)S
XP /F13 45 12 0 6 9 8 2 16 0
<FF80 FF80>
PXLC RP
898 918 XY F13(-2,)S 11 x(1)S 12 x(\);)S 58 x(//)S 11 x(p)S 1 x
(osition=1,)S 9 x(coun)S -1 x(t=Arra)S -1 x(y)S 1501 918 XY 
11 2 R(Size-2,)S 10 x(stride=1)S
XP /F13 53 18 2 0 15 21 21 16 0
<2030 3FE0 3FC0 2400 2000 2000 2000 2000 2F80 30E0 2070 0030 0038
 0038 4038 E038 E038 8030 4060 20C0 1F00>
PXLC RP
420 957 XY F13(5)S 537 X(Index)S
XP /F13 74 18 2 0 16 23 23 16 0
<0FFC 00E0 00E0 00E0 00E0 00E0 00E0 00E0 00E0 00E0 00E0 00E0 00E0
 00E0 00E0 00E0 00E0 00E0 E0E0 E0E0 C1C0 6180 1F00>
PXLC RP
635 957 XY F13(J)S 11 x(=)S 13 x(I;)S 1061 X(//)S 11 x(ma)S
XP /F13 107 19 0 0 18 23 23 24 0
<FC0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000
 1C3F80 1C1C00 1C1800 1C2000 1C4000 1CC000 1FE000 1CF000 1C7000
 1C7800 1C3C00 1C1E00 1C1E00 FF3FC0>
PXLC RP
1155 957 XY F13(k)S -1 x(e)S 11 x(an)S 11 x(Index)S 10 x(o)S
XP /F13 98 20 0 0 18 23 23 24 0
<FC0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000
 1CF800 1F0600 1C0300 1C0380 1C0180 1C01C0 1C01C0 1C01C0 1C01C0
 1C0180 1C0380 1C0300 1B0E00 10F800>
PXLC RP
1365 957 XY F13(b)S
XP /F13 106 11 -2 -6 7 23 29 16 0
<0300 0780 0780 0300 0000 0000 0000 0000 0000 1F80 0380 0380 0380
 0380 0380 0380 0380 0380 0380 0380 0380 0380 0380 0380 0380 4380
 E300 E700 7C00>
PXLC RP
1386 957 XY F13(ject)S 11 x(J)S 12 x(just)S 11 x(lik)S -1 x(e)S 10 x
(I)S
XP /F13 54 18 1 0 16 21 21 16 0
<01F0 0608 080C 181C 301C 7000 6000 E000 E3E0 EC30 F018 F00C E00E
 E00E E00E 600E 600E 300C 3018 1830 07C0>
PXLC RP
420 997 XY F13(6)S 537 X(Index)S 10 x(K)S 12 x(=)S 12 x(I-1;)S 1061 X
(//)S 11 x(mak)S -1 x(e)S 11 x(an)S 11 x(Index)S 10 x(ob)S 2 x(ject)S
10 x(K)S 12 x(just)S 11 x(lik)S -1 x(e)S 11 x(I-1)S
XP /F13 55 18 2 0 17 22 22 16 0
<4000 7FFE 7FFC 7FF8 C008 8010 8020 0040 0080 0080 0100 0100 0300
 0200 0600 0600 0E00 0E00 0E00 0E00 0E00 0400>
PXLC RP
420 1036 XY F13(7)S 537 X(Index)S
XP /F13 76 22 1 0 20 23 23 24 0
<FFC000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000
 1C0000 1C0000 1C0000 1C0000 1C0000 1C0020 1C0020 1C0020 1C0060
 1C0060 1C0040 1C00C0 1C03C0 FFFFC0>
PXLC RP
635 1036 XY F13(L)S 11 x(=)S 13 x(-I;)S 1061 X(//)S 11 x(mak)S -1 x
(e)S 11 x(L)S 12 x(lik)S -1 x(e)S 11 x(I)S 11 x(but)S
XP /F13 119 25 1 0 23 14 14 24 0
<FCFE7C 383838 383810 1C3C20 1C3C20 1C4C20 0E4E40 0E4E40 0E8640
 078780 078780 070380 030300 030300>
PXLC RP
1388 1036 XY F13(with)S 11 x(ne)S
XP /F13 103 18 1 -7 17 14 21 16 0
<0F9E 18E3 3060 7070 7070 7070 3060 18C0 2F80 2000 6000 3FE0 3FF8
 3FFC 600E C006 C006 C006 600C 3838 0FE0>
PXLC RP
1503 1036 XY F13(gativ)S -1 x(e)S 10 x(stride)S
XP /F13 56 18 1 0 16 21 21 16 0
<07E0 1830 2018 600C 600C 700C 7818 3E10 1F60 0FC0 0FF0 18F8 607C
 601E C00E C006 C006 C004 600C 3830 0FE0>
PXLC RP
420 1075 XY F13(8)S 537 X(Index)S
XP /F13 77 32 1 0 30 23 23 32 0
<FE0003F8 1E0003C0 170005C0 170005C0 170005C0 138009C0 138009C0
 11C011C0 11C011C0 11C011C0 10E021C0 10E021C0 107041C0 107041C0
 107041C0 103881C0 103881C0 101D01C0 101D01C0 100E01C0 100E01C0
 380E01C0 FE040FF8>
PXLC RP
635 1075 XY F13(M)S 12 x(=)S 12 x(5;)S 1061 X(//)S 11 x(mak)S -1 x
(e)S 11 x(Index)S 10 x(ob)S 2 x(ject)S
XP /F13 102 11 0 0 12 23 23 16 0
<03E0 0670 0E70 1C20 1C00 1C00 1C00 1C00 1C00 FF80 1C00 1C00 1C00
 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 1C00 FF80>
PXLC RP
1405 1075 XY F13(from)S 11 x(in)S -1 x(teger)S 10 x(index)S
XP /F13 57 18 1 0 16 21 21 16 0
<07C0 1830 3018 6018 E00C E00C E00E E00E E00E 601E 301E 186E 0F8E
 000E 000C 001C 7018 7018 6030 20C0 1F80>
PXLC RP
420 1115 XY F13(9)S 537 X(Index)S 10 x(N;)S 1061 X(//)S 11 x(build)S
10 x(an)S 11 x(uninitialized)S 8 x(Index)S 10 x(ob)S 2 x(ject)S 39 y 
420 X(10)S 537 X(N)S 12 x(=)S 12 x(I+1;)S 1061 X(//)S 11 x(Index)S
10 x(assignmen)S -1 x(t)S 10 x(to)S 11 x(build)S 10 x(N)S 12 x(lik)S
-1 x(e)S 11 x(o)S
XP /F13 11 21 0 0 22 23 23 24 0
<00FCF8 07839C 0E079C 1C0708 1C0700 1C0700 1C0700 1C0700 1C0700
 FFFFE0 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 1C0700 1C0700 1C0700 1C0700 FF1FE0>
PXLC RP
1642 1154 XY F13(\013set)S 10 x(of)S 11 x(I)S 1233 Y 488 X(//)S 11 x
(Arra)S -1 x(y)S 11 x(Constructor)S 9 x(examples)S 40 y 420 X(11)S
537 X(doubleArra)S -1 x(y)S 9 x(A1)S 11 x(\(Arra)S -1 x(y)S 
900 1273 XY 11 2 R(Size\);)S 39 y 420 X(12)S
XP /F13 13 20 0 0 19 23 23 24 0
<00FF00 070700 0E0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 FFFF00 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700 1C0700
 1C0700 1C0700 1C0700 1C0700 FFBFE0>
PXLC RP
537 1312 XY F13(\015oatArra)S -1 x(y)S 9 x(B1)S 12 x(\(Arra)S -1 x
(y)S 866 1312 XY 11 2 R -1 x(Size,Arra)S -1 x(y)S 1038 1312 XY 
11 2 R(Size\);)S 39 y 420 X(13)S 537 X(doubleArra)S -1 x(y)S 9 x(C1)S
11 x(\(Arra)S -1 x(y)S 899 1351 XY 11 2 R(Size,Arra)S -1 x(y)S 
1072 1351 XY 11 2 R(Size,Arra)S -1 x(y)S 1244 1351 XY 11 2 R
(Size\);)S 40 y 420 X(14)S 537 X(in)S -1 x(tArra)S -1 x(y)S 10 x(D1)S
11 x(\(Arra)S -1 x(y)S 841 1391 XY 11 2 R(Size,Arra)S -1 x(y)S 
1014 1391 XY 11 2 R -1 x(Size,Arra)S -1 x(y)S 1186 1391 XY 
11 2 R(Size,Arra)S -1 x(y)S 1359 1391 XY 11 2 R -1 x(Size\);)S 39 y 
420 X(15)S 537 X(\015oatArra)S -1 x(y)S 9 x(E1)S 12 x(=)S 12 x(B1;)S
40 y 420 X(16)S 537 X(doubleArra)S -1 x(y)S
XP /F13 70 23 1 0 21 23 23 24 0
<FFFFE0 1C00E0 1C0060 1C0020 1C0010 1C0010 1C0010 1C0400 1C0400
 1C0400 1C0C00 1FFC00 1C0C00 1C0400 1C0400 1C0400 1C0000 1C0000
 1C0000 1C0000 1C0000 1C0000 FFC000>
PXLC RP
740 1470 XY F13(F1)S 11 x(=)S 12 x(B1\(I-1,J\);)S 1549 Y 420 X(17)S
537 X(double)S
XP /F13 42 18 2 11 15 25 14 16 0
<0200 0200 0200 C218 F278 3AE0 0F80 0F80 3AE0 F278 C218 0200 0200
 0200>
PXLC RP
650 1549 XY F13(*F)S -3 x(ortran)S 786 1549 XY 11 2 R(Arra)S -1 x(y)S
888 1549 XY 11 2 R
XP /F13 80 24 1 0 21 23 23 24 0
<FFFE00 1C0380 1C00C0 1C0060 1C0070 1C0070 1C0070 1C0070 1C0060
 1C00C0 1C0380 1FFE00 1C0000 1C0000 1C0000 1C0000 1C0000 1C0000
 1C0000 1C0000 1C0000 1C0000 FF8000>
PXLC RP
899 1549 XY F13(P)S -1 x(oin)S -1 x(ter)S 10 x(=)S 12 x(new)S 12 x
(double)S
XP /F13 91 10 3 -8 9 25 33 8 0
<FC FC C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0
 C0 C0 C0 C0 C0 C0 C0 C0 FC FC>
PXLC RP
1248 1549 XY F13([Arra)S -1 x(y)S 1349 1549 XY 11 2 R(Size+1)S
XP /F13 93 10 0 -8 6 25 33 8 0
<FC FC 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C
 0C 0C 0C 0C 0C 0C 0C 0C FC FC>
PXLC RP
1466 1549 XY F13(][Arra)S -1 x(y)S 1577 1549 XY 11 2 R -1 x(Size];)S
39 y 420 X(18)S 537 X(doubleArra)S -1 x(y)S
XP /F13 71 28 2 0 25 23 23 24 0
<007E08 038198 060058 0C0038 180018 300018 700008 700008 E00008
 E00000 E00000 E00000 E00000 E003FE E00038 700038 700038 300038
 180038 0C0038 060038 0380D8 007F08>
PXLC RP
740 1588 XY F13(G)S 11 x(\(F)S -3 x(ortran)S 911 1588 XY 
11 2 R(Arra)S -1 x(y)S 1013 1588 XY 11 2 R(P)S -1 x(oin)S -1 x
(ter,Arra)S -1 x(y)S 1237 1588 XY 11 2 R -1 x(Size,Arra)S -1 x(y)S
1409 1588 XY 11 2 R(Size+1\);)S 1667 Y 420 X(19)S 537 X(Arra)S -1 x
(ys)S 11 x(for)S 10 x(use)S 11 x(in)S 12 x(examples)S 10 x(b)S 1 x
(elo)S -1 x(w)S 39 y 420 X(20)S 537 X(doubleArra)S -1 x(y)S 9 x(A)S
12 x(\(Arra)S -1 x(y)S 883 1706 XY 11 2 R -1 x(Size,Arra)S -1 x(y)S
1055 1706 XY 11 2 R(Size\);)S 40 y 420 X(21)S 537 X(doubleArra)S 
-1 x(y)S 9 x(B)S 11 x(\(Arra)S -1 x(y)S 881 1746 XY 11 2 R
(Size,Arra)S -1 x(y)S 1054 1746 XY 11 2 R -1 x(Size\);)S 39 y 420 X
(22)S 537 X(doubleArra)S -1 x(y)S 9 x(C)S 12 x(\(Arra)S -1 x(y)S 
882 1785 XY 11 2 R -1 x(Size,Arra)S -1 x(y)S 1054 1785 XY 
11 2 R(Size\);)S 40 y 420 X(23)S 537 X(doubleArra)S -1 x(y)S 9 x(D)S
11 x(\(Arra)S -1 x(y)S 883 1825 XY 11 2 R(Size,Arra)S -1 x(y)S 
1056 1825 XY 11 2 R -1 x(Size\);)S 39 y 420 X(24)S 537 X(double)S 
9 x(x)S 12 x(=)S 12 x(42;)S 1943 Y 488 X(//)S 11 x(example)S 10 x
(of)S 11 x(arra)S -1 x(y-scalar)S 8 x(assignmen)S -1 x(t)S 39 y 
420 X(25)S 537 X(A)S 12 x(=)S 12 x(x;)S 40 y 420 X(26)S 537 X(A)S 
12 x(\(I\))S 11 x(=)S 12 x(x;)S 39 y 420 X(27)S 537 X(A)S 12 x
(\(I-1\))S 10 x(=)S 12 x(x)S
XP /F15 3 18 2 1 15 15 14 16 0
<0200 0200 0200 C218 F278 3AE0 0F80 0F80 3AE0 F278 C218 0200 0200
 0200>
PXLC RP
726 2061 XY F15(\003)S 11 x F13(x;)S 2140 Y 488 X(//)S 11 x
(examples)S 10 x(of)S 11 x(arra)S -1 x(y-arra)S -1 x(y)S 8 x
(assignmen)S -1 x(t)S 10 x(op)S 1 x(erations)S 9 x(and)S 10 x(use)S
11 x(of)S 12 x(Index)S 10 x(ob)S 2 x(jects)S 40 y 420 X(28)S 537 X
(B)S 11 x(=)S 13 x(A;)S 39 y 420 X(29)S 537 X(B)S 11 x(=)S 13 x(C)S
12 x(=)S 12 x(D)S 12 x(=)S 12 x(A;)S 39 y 420 X(30)S 537 X(A)S 12 x
(\(I,J\))S 11 x(=)S 12 x(B)S 12 x(\(J,J\);)S 40 y 420 X(31)S 537 X
(A)S 12 x(\(I-1,J\))S 10 x(=)S 12 x(B)S 12 x(\(I+1,J\);)S 2377 Y 
488 X(//)S 11 x(Scalar)S 10 x(indexing)S 39 y 420 X(32)S 537 X(A)S
12 x(\(0,12\))S 10 x(=)S 12 x(x;)S 40 y 420 X(33)S 537 X(A)S 12 x
(\(5,12\))S 10 x(=)S 12 x(A)S 12 x(\(0,12\);)S 39 y 420 X(34)S 537 X
(x)S 11 x(=)S 12 x(A)S 12 x(\(1,12\))S 10 x(+)S 13 x(B\(0,12\);)S 
2574 Y 488 X(//)S 11 x(examples)S 10 x(of)S 11 x(arra)S -1 x(y-arra)S
-1 x(y)S 8 x(arithmitic)S 10 x(op)S 1 x(erations)S 39 y 420 X(35)S
537 X(A)S 12 x(=)S 12 x(B)S 12 x(+)S 12 x(\(C)S 12 x F15(\003)S 11 x 
F13(B)S 12 x(-)S 12 x(D\))S 11 x(/)S 11 x(A;)S 40 y 420 X(36)S 537 X
(A)S 12 x(\(I,J\))S 11 x(+=)S 12 x(B)S 12 x(\(I,J\))S 11 x(/)S 11 x
(C)S 13 x(\(I,J\);)S 39 y 420 X(37)S 537 X(A)S 12 x(\(I-1,J\))S 10 x 
F15(\003)S 10 x F13(=)S 12 x(B)S 11 x(\(I+1,J\);)S 2771 Y 488 X(//)S
11 x(examples)S 10 x(of)S 11 x(Jacobi)S 10 x(relaxation)S 9 x(\(9-p)S
1 x(oin)S -1 x(t)S 9 x(stencile\))S 40 y 420 X(38)S 537 X(A)S 12 x
(\(I,J\))S 11 x(=)S 12 x(\()S 11 x(A)S 13 x(\(I+1,J+1\))S 11 x(+)S
12 x(A)S 12 x(\(I,J+1\))S 11 x(+)S 12 x(A)S 12 x(\(I-1,J+1\))S 11 x
(+)S 12 x(A)S 12 x(\(I+1,J\))S 11 x(+)S 39 y 420 X(39)S 642 X(A)S 
12 x(\(I-1,J\))S 10 x(+)S 12 x(A)S 12 x(\(I+1,J-1\))S 11 x(+)S 12 x
(A)S 12 x(\(I,J-1\))S 10 x(+)S 12 x(A)S 13 x(\(I-1,J-1\))S 9 x(\))S
12 x(/)S 11 x(8.0;)S
XP /F25 /cmr10 300 41.5 41.5 128 [-3 -11 41 31] PXLNF RP
XP /F25 49 21 4 0 17 28 28 16 0
<0300 0700 3F00 C700 0700 0700 0700 0700 0700 0700 0700 0700 0700
 0700 0700 0700 0700 0700 0700 0700 0700 0700 0700 0700 0700 0700
 0F80 FFF8>
PXLC RP
1208 2940 XY F25(1)S
%%PageTrailer
/paper-automatic true SPS 1 PP EP
%%PageBoundingBox: 101 84 425 684

%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 488 0 XY
%%EndPageSetup
488 517 XY F13(//)S 11 x(examples)S 10 x(of)S 11 x(Jacobi)S 10 x
(relaxation)S 9 x(\(5-p)S 1 x(oin)S -1 x(t)S 9 x(stencile\))S 39 y 
420 X(40)S 537 X(A)S 12 x(\(I,J\))S 11 x(=)S 12 x(\()S 11 x(A)S 13 x
(\(I,J+1\))S 10 x(+)S 13 x(A)S 12 x(\(I,J-1\))S 10 x(+)S 12 x(A)S 
12 x(\(I+1,J\))S 11 x(+)S 13 x(A)S 12 x(\(I-1,J\))S 10 x(\))S 12 x
(/)S 11 x(4.0;)S 635 Y 488 X(//)S 11 x(more)S 11 x(complex)S 10 x
(op)S 1 x(erations)S 40 y 420 X(41)S 537 X(B)S 11 x(\(I,J\))S 11 x
(=)S 12 x(\()S 12 x(A)S 12 x(\(I-1,J-1\))S 10 x F15(\003)S 11 x F13
(B)S 12 x(\(I+1,J+1\))S 11 x(+)S 12 x(C)S 12 x(\(I-1,J\))S 11 x F15
(\003)S 11 x F13(D)S 12 x(\(I,J+1\))S 11 x(-)S 39 y 746 X(D)S 12 x
(\(I,J\))S 11 x F15(\003)S 11 x F13(B)S 12 x(\(I,J\))S 11 x F15
(\003)S 11 x F13(\()S 12 x(A)S 12 x(\(I,J\))S 11 x(-)S 11 x(B)S 12 x
(\(I,J\))S 11 x(\))S 11 x(\))S 12 x(/)S 11 x(\()S 12 x(C)S 12 x
(\(I,J\))S 11 x(+)S 12 x(D)S 12 x(\(I,J\))S 11 x(\);)S 793 Y 488 X
(//)S 11 x(examples)S 10 x(of)S 11 x(relational)S 9 x(op)S 1 x
(erator)S 40 y 420 X(42)S
XP /F72 /cmbx8 300 33.2 33.2 128 [-2 -8 40 25] PXLNF RP
XP /F72 105 11 1 0 9 24 24 8 0
<38 7C 7C 7C 38 00 00 00 00 FC FC 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C FF
 FF>
PXLC RP
537 833 XY F72(i)S
XP /F72 110 23 2 0 20 15 15 24 0
<FC7C00 FD8E00 3E0F00 3E0F00 3C0F00 3C0F00 3C0F00 3C0F00 3C0F00
 3C0F00 3C0F00 3C0F00 3C0F00 FF3FC0 FF3FC0>
PXLC RP
548 833 XY F72(n)S
XP /F72 116 16 1 0 13 21 21 16 0
<0600 0600 0600 0E00 0E00 1E00 3FE0 FFE0 1E00 1E00 1E00 1E00 1E00
 1E00 1E00 1E30 1E30 1E30 1E30 0E20 07C0>
PXLC RP
569 833 XY F72(t)S
XP /F72 65 31 1 0 29 23 23 32 0
<00060000 000F0000 000F0000 001F8000 001F8000 001F8000 0037C000
 0037C000 0063E000 0063E000 00E3F000 00C1F000 00C1F000 0180F800
 0180F800 03FFFC00 03FFFC00 07007E00 06003E00 0E003F00 0C001F00
 FF80FFF0 FF80FFF0>
PXLC RP
585 833 XY F72(A)S
XP /F72 114 17 2 0 15 15 15 16 0
<F8E0 F938 3A78 3A78 3C30 3C00 3C00 3C00 3C00 3C00 3C00 3C00 3C00
 FF80 FF80>
PXLC RP
616 833 XY F72(rr)S
XP /F72 97 20 1 0 19 15 15 24 0
<0FE000 383800 3C1C00 3C1E00 181E00 001E00 00FE00 0F9E00 3C1E00
 781E00 F01E00 F01E00 F01E00 786FC0 1F87C0>
PXLC RP
649 833 XY F72(a)S
XP /F72 121 21 1 -6 19 15 21 24 0
<FF0FC0 FF0FC0 3C0300 1E0600 1E0600 0F0C00 0F0C00 079800 079800
 03F800 03F000 03F000 01E000 01E000 00C000 00C000 61C000 F18000
 F38000 E70000 3C0000>
PXLC RP
668 833 XY F72(y)S 12 x F13(Mask)S 12 x(=)S 12 x(B)S
XP /F14 /cmmi8 300 33.2 33.2 128 [0 -8 36 25] PXLNF RP
XP /F14 62 27 3 -3 23 19 22 24 0
<C00000 F00000 3C0000 0E0000 078000 01E000 007800 001E00 000700
 0003C0 0000F0 0000F0 0003C0 000700 001E00 007800 01E000 078000
 0E0000 3C0000 F00000 C00000>
PXLC RP
872 833 XY F14(>)S F13(=)S 12 x(C;)S 39 y 420 X(43)S 537 X(Mask)S 
11 x(=)S
XP /F13 33 10 3 0 7 23 23 8 0
<60 F0 F0 F0 F0 F0 60 60 60 60 60 60 60 60 60 00 00 00 00 60 F0 F0 60>
PXLC RP
670 872 XY F13(!B;)S 39 y 420 X(44)S 537 X(Mask)S 11 x(=)S 12 x
(!\(B)S
XP /F13 38 27 1 0 24 23 23 24 0
<01C000 032000 061000 0E1000 0E1000 0E1000 0E2000 0E4000 0E8000
 0780FE 070038 070020 0B8020 138040 31C040 61E080 60E100 E07100
 E03A00 E01C02 700E02 38370C 0FC1F8>
PXLC RP
730 911 XY F13(&&)S 13 x(C\))S 12 x(!=)S 12 x(\(!B)S
XP /F15 107 18 3 -9 14 25 34 16 0
<C060 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060
 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060 C060
 C060 C060 C060 C060 C060 C060 C060 C060>
PXLC RP
957 911 XY F15(k)S 12 x F13(!C\);)S 11 x(DeMorgan)S
XP /F13 39 10 3 13 7 23 10 8 0
<60 F0 F0 70 10 10 20 20 40 40>
PXLC RP
1218 911 XY F13('s)S 12 x(La)S -1 x(w)S 990 Y 488 X(//)S 11 x
(example)S 10 x(of)S 11 x(replace)S 10 x(op)S 1 x(erator)S 40 y 
420 X(45)S 537 X(A)S 12 x(\(I,J\).replace)S 8 x(\()S 12 x(B)S 12 x
(\(I,J\))S
XP /F14 60 27 3 -3 23 19 22 24 0
<000030 0000F0 0003C0 000700 001E00 007800 01E000 078000 0E0000
 3C0000 F00000 F00000 3C0000 0E0000 078000 01E000 007800 001E00
 000700 0003C0 0000F0 000030>
PXLC RP
914 1030 XY F14(<)S F13(=)S 13 x(0.001)S 10 x(,)S 12 x(0.001)S 10 x
(\);)S 39 y 420 X(46)S 537 X(A)S 12 x(\(I,J\).replace)S 8 x(\()S 
12 x(A)S 12 x(\(I,J\))S 11 x F14(<)S F13(=)S 12 x(C\(I,J\))S 12 x(,)S
11 x(C\(I,J\))S 12 x(\);)S 1148 Y 488 X(//)S 11 x(examples)S 10 x
(of)S 11 x(max)S 11 x(function)S 10 x(use)S 39 y 420 X(47)S 537 X(x)S
11 x(=)S 12 x(max)S 12 x(\(B\);)S 40 y 420 X(48)S 537 X(A)S 12 x(=)S
12 x(max)S 11 x(\(B)S 12 x(,)S 11 x(C)S 13 x F15(\003)S 11 x F13
(B\);)S 39 y 420 X(49)S 537 X(A)S 12 x(=)S 12 x(max)S 11 x(\(B)S 
12 x(,)S 11 x(C)S 13 x(,)S 11 x(A\);)S 1345 Y 488 X(//)S 11 x
(examples)S 10 x(of)S 11 x(miscellaneous)S 9 x(function)S 9 x(use)S
40 y 420 X(50)S 537 X(x)S 11 x(=)S 12 x(sum)S 12 x(\(B\);)S 39 y 
420 X(51)S 537 X(A)S 12 x(=)S 12 x(cos)S 11 x(\(B\))S 11 x F15(\003)S
12 x F13(s)S
XP /F13 113 19 1 -6 19 14 20 24 0
<07C200 1C2600 381E00 700E00 600E00 E00E00 E00E00 E00E00 E00E00
 600E00 700E00 301E00 1C2E00 07CE00 000E00 000E00 000E00 000E00
 000E00 007FC0>
PXLC RP
781 1424 XY F13(qrt)S 10 x(\(C\);)S 39 y 420 X(52)S 537 X(B\(I,J\))S
10 x(=)S 13 x(\(cos)S 10 x(\(B\))S 12 x F15(\003)S 11 x F13(2.0)S 
11 x(\)\(I,J\);)S 1542 Y 488 X(//)S 11 x(examples)S 10 x(of)S 11 x
(c)S -1 x(hanging)S 9 x(bases)S 11 x(of)S 11 x(arra)S -1 x(y)S 10 x
(ob)S 2 x(jects)S 40 y 420 X(53)S 537 X(A.setBase)S 10 x(\(1\);)S 
11 x(F)S -3 x(orce)S 10 x(A)S 13 x(to)S 11 x(ha)S -1 x(v)S -1 x(e)S
10 x(indexing)S 9 x(similar)S 11 x(to)S 11 x(F)S -3 x(ortran)S 10 x
(arra)S -1 x(y)S 39 y 420 X(54)S 537 X(setGlobalBase)S 8 x(\(1\);)S
11 x(Set)S 11 x(all)S 11 x(future)S 9 x(arra)S -1 x(ys)S 11 x(to)S
11 x(ha)S -1 x(v)S -1 x(e)S 10 x(F)S -3 x(ortran)S 10 x(lik)S -1 x
(e)S 11 x(base)S 10 x(of)S 11 x(1)S 40 y 420 X(55)S 537 X(A.setBase)S
10 x(\(x\);)S 39 y 420 X(56)S 537 X(A\(x\))S 11 x(=)S 12 x
(A\(x+1\);)S 40 y 420 X(57)S 537 X(A.setBase)S 10 x(\(x,0\);)S 39 y 
420 X(58)S 537 X(A.setBase)S 10 x(\(x*x,1\);)S 1858 Y 488 X(//)S 
11 x(examples)S 10 x(of)S 11 x(bases)S 11 x(and)S 10 x(b)S 1 x(ound)S
10 x(access)S 39 y 420 X(59)S 537 X(Arra)S -1 x(y)S 628 1897 XY 
11 2 R(Size)S 10 x(=)S 12 x(A.dimension\(0\);)S 40 y 420 X(60)S 
537 X(prin)S -1 x(tf)S 10 x(\("Num)S -1 x(b)S 1 x(er)S 10 x(of)S 
11 x(elemen)S -1 x(ts)S 11 x(in)S 11 x(A)S 12 x(=)S
XP /F13 37 29 2 -2 26 25 27 24 0
<1C0018 320038 618070 6161F0 E09EE0 E080C0 E081C0 E08180 E08380
 E08700 610600 610E00 321C00 1C1838 003864 0070C2 0060C2 00E1C1
 01C1C1 0181C1 0381C1 0301C1 0701C1 0E00C2 0C00C2 1C0064 180038>
PXLC RP
1105 1937 XY F13(%d)S
XP /F15 110 18 2 -8 15 25 33 16 0
<C000 C000 E000 6000 6000 7000 3000 3000 3800 1800 1C00 0C00 0C00
 0E00 0600 0600 0700 0300 0300 0380 0180 0180 01C0 00C0 00E0 0060
 0060 0070 0030 0030 0038 0018 0018>
PXLC RP
1166 1937 XY F15(n)S F13(n",A.elemen)S -1 x(tCoun)S -1 x(t\(\);)S 
39 y 420 X(61)S 537 X(for)S 11 x(\(in)S -1 x(t)S 10 x(j)S 12 x(=)S
12 x(A.getBase\(1\);)S 9 x(j)S 12 x F14(<)S F13(=)S 12 x
(A.getBound\(1\);)S 9 x(j++\))S 40 y 420 X(620)S 642 X(for)S 10 x
(\(in)S -1 x(t)S 11 x(i)S 12 x(=)S 12 x(A.getBase\(0\);)S 9 x(i)S 
12 x F14(<)S F13(=)S 12 x(A.getBound\(0\);)S 9 x(i++\))S 39 y 420 X
(63)S 746 X(A\(i,j\))S 11 x(=)S 13 x(fo)S 1 x(o)S 10 x(\(i,j\);)S 
2134 Y 488 X(//)S 11 x(examples)S 10 x(of)S 11 x(displa)S -1 x(y)S
10 x(functions)S 39 y 420 X(64)S 537 X(A)S 12 x(\(I,J\).displa)S 
-1 x(y\(")S
XP /F13 84 25 1 0 23 23 23 24 0
<7FFFF8 603818 403808 403808 803804 803804 803804 003800 003800
 003800 003800 003800 003800 003800 003800 003800 003800 003800
 003800 003800 003800 003800 07FFC0>
PXLC RP
792 2173 XY F13(This)S 12 x(is)S 11 x(A)S 12 x(\(I,J\)"\);)S 40 y 
420 X(65)S 537 X(A)S 12 x(=)S 12 x(B)S 12 x(+)S 12 x(\(C)S 12 x F15
(\003)S 11 x F13(D\).displa)S -1 x(y\("This)S 9 x(is)S 11 x(C)S 12 x 
F15(\003)S 12 x F13(D)S 12 x(in)S 11 x(expresion)S 9 x(A)S 12 x(=)S
12 x(B)S 12 x(+)S 12 x(\(C)S 12 x F15(\003)S 12 x F13(D\)"\);)S 39 y 
420 X(66)S 537 X(\(A)S 12 x(=)S 12 x(B)S 11 x F15(\003)S 12 x F13
(D\).view\("This)S 10 x(is)S 11 x(A)S 13 x(=)S 12 x(B)S 11 x F15
(\003)S 12 x F13(D"\);)S 40 y 420 X(67)S 537 X(A.view\("This)S 10 x
(is)S 12 x(A)S 12 x(\(same)S 11 x(view)S 12 x(as)S 11 x(ab)S 1 x(o)S
-1 x(v)S -1 x(e\)"\);)S 2371 Y 488 X(//)S 11 x(2)S 11 x(w)S -1 x(a)S
-1 x(ys)S 12 x(to)S 11 x(pass)S 11 x(arra)S -1 x(y)S 10 x(ob)S 2 x
(jects)S 9 x(b)S -1 x(y)S 11 x(reference)S 39 y 420 X(68)S 537 X(v)S
-1 x(oid)S 10 x(fo)S 1 x(o)S 11 x(\()S
XP /F72 99 18 1 0 16 15 15 16 0
<07F0 1C1C 383C 783C 7018 F000 F000 F000 F000 F000 7000 7800 3806
 1C0C 07F8>
PXLC RP
697 2410 XY F72(c)S
XP /F72 111 20 1 0 18 15 15 24 0
<07F000 1C1C00 380E00 700700 700700 F00780 F00780 F00780 F00780
 F00780 700700 700700 380E00 1C1C00 07F000>
PXLC RP
715 2410 XY F72(on)S
XP /F72 115 16 1 0 14 15 15 16 0
<1FF0 6070 4030 C030 E000 FF00 7FE0 3FF0 0FF8 0078 C018 C018 E010
 F020 CFC0>
PXLC RP
758 2410 XY F72(st)S
XP /F72 100 23 1 0 20 23 23 24 0
<001F80 001F80 000780 000780 000780 000780 000780 000780 03F780
 1E1F80 380780 780780 700780 F00780 F00780 F00780 F00780 F00780
 700780 780780 380F80 1C1FE0 07E7E0>
PXLC RP
804 2410 XY F72(do)S
XP /F72 117 23 2 0 20 15 15 24 0
<FC3F00 FC3F00 3C0F00 3C0F00 3C0F00 3C0F00 3C0F00 3C0F00 3C0F00
 3C0F00 3C0F00 3C0F00 3C1F00 1C2FC0 0FCFC0>
PXLC RP
847 2410 XY F72(u)S
XP /F72 98 23 2 0 21 23 23 24 0
<FC0000 FC0000 3C0000 3C0000 3C0000 3C0000 3C0000 3C0000 3DFC00
 3F0700 3C0380 3C03C0 3C01C0 3C01E0 3C01E0 3C01E0 3C01E0 3C01E0
 3C01C0 3C03C0 3C0380 3B0F00 31F800>
PXLC RP
869 2410 XY F72(b)S
XP /F72 108 11 1 0 9 23 23 8 0
<FC FC 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C 3C FF FF>
PXLC RP
892 2410 XY F72(l)S
XP /F72 101 19 1 0 17 15 15 16 0
<07F0 1C18 380C 7806 7007 F007 F007 FFFF F000 F000 7000 7800 3803
 1E06 03FC>
PXLC RP
903 2410 XY F72(eArra)S -1 x(y)S 11 x F13(&)S
XP /F13 88 26 1 0 24 23 23 24 0
<FF83FC 1F01E0 0E0080 070080 078100 038200 01C200 01E400 00E800
 007800 007800 003800 007C00 005E00 008E00 018700 010780 020380
 0601C0 0401E0 0C00E0 1C00F0 FF03FE>
PXLC RP
1077 2410 XY F13(X)S 12 x(\);)S 39 y 420 X(69)S 537 X(fo)S 1 x(o)S
10 x(\()S 12 x(ev)S -2 x(aluate)S 9 x(\(A)S 12 x(+)S 12 x(B\))S 12 x
(\);)S 2528 Y 420 X(70)S 537 X(C)S 12 x(=)S 12 x(A)S 12 x(+)S 12 x
(B;)S 40 y 420 X(71)S 537 X(fo)S 1 x(o)S 10 x(\()S 12 x(C)S 12 x
(\);)S 2647 Y 488 X(//)S 11 x(passing)S 10 x(arra)S -1 x(y)S 10 x
(ob)S 2 x(jects)S 10 x(b)S -1 x(y)S 11 x(v)S -2 x(alue)S 10 x
(requires)S 9 x(no)S 11 x(sp)S 1 x(ecial)S 10 x(handling)S 39 y 
420 X(72)S 537 X(v)S -1 x(oid)S 10 x(fo)S 1 x(obar)S 10 x(\()S 11 x 
F72(const)S 14 x(doubleArra)S -1 x(y)S 10 x F13(X)S 12 x(\);)S 39 y 
420 X(73)S 537 X(fo)S 1 x(obar)S 9 x(\()S 12 x(A)S 12 x(+)S 12 x(B)S
12 x(\);)S 2804 Y 488 X(//)S 11 x(examples)S 10 x(of)S 11 x(\014ll)S
11 x(functions)S 40 y 420 X(74)S 537 X(A\(I,J\).\014ll\(x\);)S
XP /F25 50 21 2 0 18 28 28 16 0
<07C0 1830 201C 400C 400E F00F F80F F807 F807 7007 000F 000E 000E
 001C 001C 0038 0070 0060 00C0 0180 0300 0601 0C01 1801 1002 3FFE
 7FFE FFFE>
PXLC RP
1208 2940 XY F25(2)S
%%PageTrailer
/paper-automatic true SPS 1 PP EP
%%PageBoundingBox: 101 84 415 674

%%PageBoundingBox: (atend)
%%BeginPageSetup
1000 BP 3300 2550 PM /paper-automatic false SPS 420 0 XY
%%EndPageSetup
420 517 XY F13(75)S 537 X(prin)S -1 x(tf)S 10 x(\("P)S
XP /F13 82 26 1 0 25 23 23 24 0
<FFFC00 1C0380 1C00C0 1C00E0 1C0070 1C0070 1C0070 1C0070 1C00E0
 1C00C0 1C0380 1FFE00 1C0780 1C01C0 1C00E0 1C00E0 1C00E0 1C00E0
 1C00E0 1C00E1 1C00E1 1C0072 FF803C>
PXLC RP
690 517 XY F13(R)S -1 x(OGRAM)S 13 x(TERMINA)S -3 x(TED)S 13 x
(NORMALL)S
XP /F13 89 26 0 0 25 23 23 32 0
<FFC03F80 1E001C00 0F000800 07001000 07803000 03802000 01C04000
 01E04000 00E08000 00F18000 00710000 003A0000 003E0000 001C0000
 001C0000 001C0000 001C0000 001C0000 001C0000 001C0000 001C0000
 001C0000 00FF8000>
PXLC RP
1305 517 XY F13(Y)S 12 x F15(n)S F13(n"\);)S
XP /F15 103 18 2 -8 15 25 33 16 0
<F000 0C00 0600 0300 0300 0300 0300 0300 0300 0300 0300 0300 0300
 0300 0180 00C0 0078 00C0 0180 0300 0300 0300 0300 0300 0300 0300
 0300 0300 0300 0300 0600 0C00 F000>
PXLC RP
488 556 XY F15(g)S
XP /F25 51 21 2 -1 18 28 29 16 0
<07E0 1830 201C 201C 781E 780E 781E 381E 001C 001C 0018 0030 0060
 07E0 0030 001C 001C 000E 000F 000F 700F F80F F80F F80F F00E 401C
 201C 1830 07E0>
PXLC RP
1208 2940 XY F25(3)S
%%PageTrailer
/paper-automatic true SPS 1 PP EP
%%PageBoundingBox: 101 84 341 674

%%Trailer
EndDviLaserDoc

%%BoundingBox: 101 84 425 684
%%Pages: 3
%%DocumentFonts:
